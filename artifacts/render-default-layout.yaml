# apiVersion: meta.k8s.appscode.com/v1alpha1
# kind: Render
# request:
#   source:
#     resource:
#       group: kubedb.com
#       kind: MongoDB
#     ref:
#       name: mg-sh
#       namespace: demo
#   # layoutName: kubedb-kubedb.com-v1alpha2-mongodbs
#   convertToTable: true


apiVersion: meta.k8s.appscode.com/v1alpha1
kind: Render
request:
  source:
    resource:
      group: core
      version: v1
      name: pods
    ref:
      namespace: demo
      name: mg-rs-demo-0
  layoutName: core-v1-pods
  pageName: Basic
  convertToTable: true
  renderBlocks:
  - Self
  - SubTable


# apiVersion: meta.k8s.appscode.com/v1alpha1
# kind: Render
# request:
#   source:
#     resource:
#       group: kubedb.com
#       version: v1alpha2
#       name: mongodbs
#     ref:
#       namespace: demo
#       name: mg-std
#   layoutName: kubedb-kubedb.com-v1alpha2-mongodbs
#   pageName: Database Insights
#   convertToTable: true
#   renderBlocks:
#   - Connection


  # block:
  #   displayMode: List
  #   kind: Connection
  #   query:
  #     raw: |
  #       request:
  #         target:
  #           group: kubedb.com
  #           kind: MongoDB
  #           name: {{ .name }}
  #           namespace: {{ .namespace }}
  #         dashboard:
  #           title: "KubeDB / MongoDB / Summary"
  #         panels: []
  #     type: REST
  #   ref:
  #     group: ui.openviz.dev
  #     kind: EmbeddedDashboard
  #   fieldPath: .response.urls
  #   view:
  #     columns:
  #     - name: Title
  #       pathTemplate: '{{ .title }}'
  #       priority: 3
  #       type: string
  #     - name: Embedded URL
  #       pathTemplate: '{{ .embeddedURL }}'
  #       priority: 3
  #       type: string

  # block:
  #   displayMode: List
  #   kind: Connection
  #   name: AppBinding
  #   query:
  #     type: GraphQL
  #     byLabel: offshoot
  #   ref:
  #     group: appcatalog.appscode.com
  #     kind: AppBinding

  # block:
  #   displayMode: List
  #   kind: Connection
  #   name: Pods
  #   query:
  #     type: GraphQL
  #     byLabel: offshoot
  #   ref:
  #     group: ""
  #     kind: Pod

  # block:
  #   displayMode: List
  #   kind: Connection
  #   name: Pods
  #   query:
  #     raw: |-
  #       query Find($src: String!, $targetGroup: String!, $targetKind: String!) {
  #         find(oid: $src) {
  #           offshoot(group: "", kind: "Pod") {
  #             refs: view(group: $targetGroup, kind: $targetKind) {
  #               namespace
  #               name
  #             }
  #           }
  #         }
  #       }
  #     type: GraphQL
  #   ref:
  #     group: core.k8s.appscode.com
  #     kind: PodView

  # block:
  #   displayMode: Field
  #   kind: Connection
  #   query:
  #     byLabel: view
  #     type: GraphQL
  #   ref:
  #     group: ui.kubedb.com
  #     kind: MongoDBInsight


  # block:
  #   displayMode: List
  #   kind: Connection
  #   name: Recent Backups
  #   query:
  #     raw: |-
  #       query Find($src: String!, $targetGroup: String!, $targetKind: String!) {
  #         find(oid: $src) {
  #           backup_via(group: "stash.appscode.com", kind: "BackupConfiguration") {
  #             refs: offshoot(group: $targetGroup, kind: $targetKind) {
  #               namespace
  #               name
  #             }
  #           }
  #         }
  #       }
  #     type: GraphQL
  #   ref:
  #     group: stash.appscode.com
  #     kind: BackupSession

  # block:
  #   displayMode: Field
  #   kind: Connection
  #   query:
  #     raw: |-
  #       query Find($src: String!, $targetGroup: String!, $targetKind: String!) {
  #         find(oid: $src) {
  #           backup_via(group: "stash.appscode.com", kind: "BackupConfiguration") {
  #             refs: view(group: $targetGroup, kind: $targetKind) {
  #               namespace
  #               name
  #             }
  #           }
  #         }
  #       }
  #     type: GraphQL
  #   ref:
  #     group: ui.stash.appscode.com
  #     kind: BackupOverview
