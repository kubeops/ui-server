apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceLayout
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: kubedb.com
    k8s.io/kind: MongoDB
    k8s.io/resource: mongodbs
    k8s.io/version: v1alpha2
  name: kubedb-kubedb.com-v1alpha2-mongodbs
spec:
  defaultLayout: false
  header:
    actions:
      create: Never
    displayMode: Field
    kind: Connection
    query:
      byLabel: view
      type: GraphQL
    ref:
      group: core.k8s.appscode.com
      kind: GenericResource
    view:
      columns:
      - name: UID
        pathTemplate: '{{ .spec.cluster.uid }}'
        priority: 3
        type: string
      - name: Name
        pathTemplate: '{{ .spec.cluster.name }}'
        priority: 3
        type: string
      - name: Display Name
        pathTemplate: '{{ .spec.cluster.displayName }}'
        priority: 3
        type: string
      - name: Provider
        pathTemplate: '{{ .spec.cluster.provider }}'
        priority: 3
        type: string
      - name: Group
        pathTemplate: '{{ .spec.apiType.group }}'
        priority: 3
        type: string
      - name: Version
        pathTemplate: '{{ .spec.apiType.version }}'
        priority: 3
        type: string
      - name: Name
        pathTemplate: '{{ .spec.apiType.name }}'
        priority: 3
        type: string
      - name: Kind
        pathTemplate: '{{ .spec.apiType.kind }}'
        priority: 3
        type: string
      - name: Scope
        pathTemplate: '{{ .spec.apiType.scope }}'
        priority: 3
        type: string
      - name: Version
        pathTemplate: '{{ .spec.version }}'
        priority: 3
        type: string
      - name: Replicas
        pathTemplate: '{{ .spec.replicas }}'
        priority: 3
        type: integer
      - name: Role Replicas
        pathTemplate: '{{ .spec.roleReplicas }}'
        priority: 3
        type: object
      - name: Mode
        pathTemplate: '{{ .spec.mode }}'
        priority: 3
        type: string
      - name: Limits
        pathTemplate: '{{ .spec.totalResource.limits }}'
        priority: 3
        type: object
      - name: Requests
        pathTemplate: '{{ .spec.totalResource.requests }}'
        priority: 3
        type: object
      - name: Limits
        pathTemplate: '{{ .spec.appResource.limits }}'
        priority: 3
        type: object
      - name: Requests
        pathTemplate: '{{ .spec.appResource.requests }}'
        priority: 3
        type: object
      - name: Role Resource Limits
        pathTemplate: '{{ .spec.roleResourceLimits }}'
        priority: 3
        type: object
      - name: Role Resource Requests
        pathTemplate: '{{ .spec.roleResourceRequests }}'
        priority: 3
        type: object
      - name: Status
        pathTemplate: '{{ .spec.status.status }}'
        priority: 3
        type: string
      - name: Message
        pathTemplate: '{{ .spec.status.message }}'
        priority: 3
        type: string
  pages:
  - blocks:
    - actions:
        create: Never
      displayMode: List
      kind: Connection
      query:
        raw: |-
          query Find($src: String!, $targetGroup: String!, $targetKind: String!) {
            find(oid: $src) {
              offshoot(group: "", kind: "Pod") {
                refs: view(group: $targetGroup, kind: $targetKind) {
                  namespace
                  name
                }
              }
            }
          }
        type: GraphQL
      ref:
        group: core.k8s.appscode.com
        kind: PodView
      view:
        columns:
        - name: Limits
          pathTemplate: '{{ .spec.resources.limits }}'
          priority: 3
          type: object
        - name: Requests
          pathTemplate: '{{ .spec.resources.requests }}'
          priority: 3
          type: object
        - name: Usage
          pathTemplate: '{{ .spec.resources.usage }}'
          priority: 3
          type: object
        - name: Name
          pathTemplate: '{{ .spec.containers.name }}'
          priority: 3
          type: string
        - name: Image
          pathTemplate: '{{ .spec.containers.image }}'
          priority: 3
          type: string
        - name: Command
          pathTemplate: '{{ .spec.containers.command }}'
          priority: 3
          type: string
        - name: Args
          pathTemplate: '{{ .spec.containers.args }}'
          priority: 3
          type: string
        - name: Working Dir
          pathTemplate: '{{ .spec.containers.workingDir }}'
          priority: 3
          type: string
        - name: Name
          pathTemplate: '{{ .spec.containers.ports.name }}'
          priority: 3
          type: string
        - name: Host Port
          pathTemplate: '{{ .spec.containers.ports.hostPort }}'
          priority: 3
          type: integer
        - name: Container Port
          pathTemplate: '{{ .spec.containers.ports.containerPort }}'
          priority: 3
          type: integer
        - name: Protocol
          pathTemplate: '{{ .spec.containers.ports.protocol }}'
          priority: 3
          type: string
        - name: Host IP
          pathTemplate: '{{ .spec.containers.ports.hostIP }}'
          priority: 3
          type: string
        - name: Prefix
          pathTemplate: '{{ .spec.containers.envFrom.prefix }}'
          priority: 3
          type: string
        - name: Name
          pathTemplate: '{{ .spec.containers.envFrom.configMapRef.name }}'
          priority: 3
          type: string
        - name: Optional
          pathTemplate: '{{ .spec.containers.envFrom.configMapRef.optional }}'
          priority: 3
          type: bool
        - name: Name
          pathTemplate: '{{ .spec.containers.envFrom.secretRef.name }}'
          priority: 3
          type: string
        - name: Optional
          pathTemplate: '{{ .spec.containers.envFrom.secretRef.optional }}'
          priority: 3
          type: bool
        - name: Name
          pathTemplate: '{{ .spec.containers.env.name }}'
          priority: 3
          type: string
        - name: Value
          pathTemplate: '{{ .spec.containers.env.value }}'
          priority: 3
          type: string
        - name: API Version
          pathTemplate: '{{ .spec.containers.env.valueFrom.fieldRef.apiVersion }}'
          priority: 3
          type: string
        - name: Field Path
          pathTemplate: '{{ .spec.containers.env.valueFrom.fieldRef.fieldPath }}'
          priority: 3
          type: string
        - name: Container Name
          pathTemplate: '{{ .spec.containers.env.valueFrom.resourceFieldRef.containerName
            }}'
          priority: 3
          type: string
        - name: Resource
          pathTemplate: '{{ .spec.containers.env.valueFrom.resourceFieldRef.resource
            }}'
          priority: 3
          type: string
        - name: Name
          pathTemplate: '{{ .spec.containers.env.valueFrom.configMapKeyRef.name }}'
          priority: 3
          type: string
        - name: Key
          pathTemplate: '{{ .spec.containers.env.valueFrom.configMapKeyRef.key }}'
          priority: 3
          type: string
        - name: Optional
          pathTemplate: '{{ .spec.containers.env.valueFrom.configMapKeyRef.optional
            }}'
          priority: 3
          type: bool
        - name: Name
          pathTemplate: '{{ .spec.containers.env.valueFrom.secretKeyRef.name }}'
          priority: 3
          type: string
        - name: Key
          pathTemplate: '{{ .spec.containers.env.valueFrom.secretKeyRef.key }}'
          priority: 3
          type: string
        - name: Optional
          pathTemplate: '{{ .spec.containers.env.valueFrom.secretKeyRef.optional }}'
          priority: 3
          type: bool
        - name: Limits
          pathTemplate: '{{ .spec.containers.resources.limits }}'
          priority: 3
          type: object
        - name: Requests
          pathTemplate: '{{ .spec.containers.resources.requests }}'
          priority: 3
          type: object
        - name: Usage
          pathTemplate: '{{ .spec.containers.resources.usage }}'
          priority: 3
          type: object
        - name: Name
          pathTemplate: '{{ .spec.containers.volumeMounts.name }}'
          priority: 3
          type: string
        - name: Read Only
          pathTemplate: '{{ .spec.containers.volumeMounts.readOnly }}'
          priority: 3
          type: bool
        - name: Mount Path
          pathTemplate: '{{ .spec.containers.volumeMounts.mountPath }}'
          priority: 3
          type: string
        - name: Sub Path
          pathTemplate: '{{ .spec.containers.volumeMounts.subPath }}'
          priority: 3
          type: string
        - name: Mount Propagation
          pathTemplate: '{{ .spec.containers.volumeMounts.mountPropagation }}'
          priority: 3
          type: string
        - name: Sub Path Expr
          pathTemplate: '{{ .spec.containers.volumeMounts.subPathExpr }}'
          priority: 3
          type: string
        - name: Name
          pathTemplate: '{{ .spec.containers.volumeDevices.name }}'
          priority: 3
          type: string
        - name: Device Path
          pathTemplate: '{{ .spec.containers.volumeDevices.devicePath }}'
          priority: 3
          type: string
        - name: Command
          pathTemplate: '{{ .spec.containers.livenessProbe.exec.command }}'
          priority: 3
          type: string
        - name: Path
          pathTemplate: '{{ .spec.containers.livenessProbe.httpGet.path }}'
          priority: 3
          type: string
        - name: Host
          pathTemplate: '{{ .spec.containers.livenessProbe.httpGet.host }}'
          priority: 3
          type: string
        - name: Scheme
          pathTemplate: '{{ .spec.containers.livenessProbe.httpGet.scheme }}'
          priority: 3
          type: string
        - name: Name
          pathTemplate: '{{ .spec.containers.livenessProbe.httpGet.httpHeaders.name
            }}'
          priority: 3
          type: string
        - name: Value
          pathTemplate: '{{ .spec.containers.livenessProbe.httpGet.httpHeaders.value
            }}'
          priority: 3
          type: string
        - name: Host
          pathTemplate: '{{ .spec.containers.livenessProbe.tcpSocket.host }}'
          priority: 3
          type: string
        - name: Initial Delay Seconds
          pathTemplate: '{{ .spec.containers.livenessProbe.initialDelaySeconds }}'
          priority: 3
          type: integer
        - name: Timeout Seconds
          pathTemplate: '{{ .spec.containers.livenessProbe.timeoutSeconds }}'
          priority: 3
          type: integer
        - name: Period Seconds
          pathTemplate: '{{ .spec.containers.livenessProbe.periodSeconds }}'
          priority: 3
          type: integer
        - name: Success Threshold
          pathTemplate: '{{ .spec.containers.livenessProbe.successThreshold }}'
          priority: 3
          type: integer
        - name: Failure Threshold
          pathTemplate: '{{ .spec.containers.livenessProbe.failureThreshold }}'
          priority: 3
          type: integer
        - name: Termination Grace Period Seconds
          pathTemplate: '{{ .spec.containers.livenessProbe.terminationGracePeriodSeconds
            }}'
          priority: 3
          type: integer
        - name: Command
          pathTemplate: '{{ .spec.containers.readinessProbe.exec.command }}'
          priority: 3
          type: string
        - name: Path
          pathTemplate: '{{ .spec.containers.readinessProbe.httpGet.path }}'
          priority: 3
          type: string
        - name: Host
          pathTemplate: '{{ .spec.containers.readinessProbe.httpGet.host }}'
          priority: 3
          type: string
        - name: Scheme
          pathTemplate: '{{ .spec.containers.readinessProbe.httpGet.scheme }}'
          priority: 3
          type: string
        - name: Name
          pathTemplate: '{{ .spec.containers.readinessProbe.httpGet.httpHeaders.name
            }}'
          priority: 3
          type: string
        - name: Value
          pathTemplate: '{{ .spec.containers.readinessProbe.httpGet.httpHeaders.value
            }}'
          priority: 3
          type: string
        - name: Host
          pathTemplate: '{{ .spec.containers.readinessProbe.tcpSocket.host }}'
          priority: 3
          type: string
        - name: Initial Delay Seconds
          pathTemplate: '{{ .spec.containers.readinessProbe.initialDelaySeconds }}'
          priority: 3
          type: integer
        - name: Timeout Seconds
          pathTemplate: '{{ .spec.containers.readinessProbe.timeoutSeconds }}'
          priority: 3
          type: integer
        - name: Period Seconds
          pathTemplate: '{{ .spec.containers.readinessProbe.periodSeconds }}'
          priority: 3
          type: integer
        - name: Success Threshold
          pathTemplate: '{{ .spec.containers.readinessProbe.successThreshold }}'
          priority: 3
          type: integer
        - name: Failure Threshold
          pathTemplate: '{{ .spec.containers.readinessProbe.failureThreshold }}'
          priority: 3
          type: integer
        - name: Termination Grace Period Seconds
          pathTemplate: '{{ .spec.containers.readinessProbe.terminationGracePeriodSeconds
            }}'
          priority: 3
          type: integer
        - name: Command
          pathTemplate: '{{ .spec.containers.startupProbe.exec.command }}'
          priority: 3
          type: string
        - name: Path
          pathTemplate: '{{ .spec.containers.startupProbe.httpGet.path }}'
          priority: 3
          type: string
        - name: Host
          pathTemplate: '{{ .spec.containers.startupProbe.httpGet.host }}'
          priority: 3
          type: string
        - name: Scheme
          pathTemplate: '{{ .spec.containers.startupProbe.httpGet.scheme }}'
          priority: 3
          type: string
        - name: Name
          pathTemplate: '{{ .spec.containers.startupProbe.httpGet.httpHeaders.name
            }}'
          priority: 3
          type: string
        - name: Value
          pathTemplate: '{{ .spec.containers.startupProbe.httpGet.httpHeaders.value
            }}'
          priority: 3
          type: string
        - name: Host
          pathTemplate: '{{ .spec.containers.startupProbe.tcpSocket.host }}'
          priority: 3
          type: string
        - name: Initial Delay Seconds
          pathTemplate: '{{ .spec.containers.startupProbe.initialDelaySeconds }}'
          priority: 3
          type: integer
        - name: Timeout Seconds
          pathTemplate: '{{ .spec.containers.startupProbe.timeoutSeconds }}'
          priority: 3
          type: integer
        - name: Period Seconds
          pathTemplate: '{{ .spec.containers.startupProbe.periodSeconds }}'
          priority: 3
          type: integer
        - name: Success Threshold
          pathTemplate: '{{ .spec.containers.startupProbe.successThreshold }}'
          priority: 3
          type: integer
        - name: Failure Threshold
          pathTemplate: '{{ .spec.containers.startupProbe.failureThreshold }}'
          priority: 3
          type: integer
        - name: Termination Grace Period Seconds
          pathTemplate: '{{ .spec.containers.startupProbe.terminationGracePeriodSeconds
            }}'
          priority: 3
          type: integer
        - name: Command
          pathTemplate: '{{ .spec.containers.lifecycle.postStart.exec.command }}'
          priority: 3
          type: string
        - name: Path
          pathTemplate: '{{ .spec.containers.lifecycle.postStart.httpGet.path }}'
          priority: 3
          type: string
        - name: Host
          pathTemplate: '{{ .spec.containers.lifecycle.postStart.httpGet.host }}'
          priority: 3
          type: string
        - name: Scheme
          pathTemplate: '{{ .spec.containers.lifecycle.postStart.httpGet.scheme }}'
          priority: 3
          type: string
        - name: Name
          pathTemplate: '{{ .spec.containers.lifecycle.postStart.httpGet.httpHeaders.name
            }}'
          priority: 3
          type: string
        - name: Value
          pathTemplate: '{{ .spec.containers.lifecycle.postStart.httpGet.httpHeaders.value
            }}'
          priority: 3
          type: string
        - name: Host
          pathTemplate: '{{ .spec.containers.lifecycle.postStart.tcpSocket.host }}'
          priority: 3
          type: string
        - name: Command
          pathTemplate: '{{ .spec.containers.lifecycle.preStop.exec.command }}'
          priority: 3
          type: string
        - name: Path
          pathTemplate: '{{ .spec.containers.lifecycle.preStop.httpGet.path }}'
          priority: 3
          type: string
        - name: Host
          pathTemplate: '{{ .spec.containers.lifecycle.preStop.httpGet.host }}'
          priority: 3
          type: string
        - name: Scheme
          pathTemplate: '{{ .spec.containers.lifecycle.preStop.httpGet.scheme }}'
          priority: 3
          type: string
        - name: Name
          pathTemplate: '{{ .spec.containers.lifecycle.preStop.httpGet.httpHeaders.name
            }}'
          priority: 3
          type: string
        - name: Value
          pathTemplate: '{{ .spec.containers.lifecycle.preStop.httpGet.httpHeaders.value
            }}'
          priority: 3
          type: string
        - name: Host
          pathTemplate: '{{ .spec.containers.lifecycle.preStop.tcpSocket.host }}'
          priority: 3
          type: string
        - name: Termination Message Path
          pathTemplate: '{{ .spec.containers.terminationMessagePath }}'
          priority: 3
          type: string
        - name: Termination Message Policy
          pathTemplate: '{{ .spec.containers.terminationMessagePolicy }}'
          priority: 3
          type: string
        - name: Image Pull Policy
          pathTemplate: '{{ .spec.containers.imagePullPolicy }}'
          priority: 3
          type: string
        - name: Add
          pathTemplate: '{{ .spec.containers.securityContext.capabilities.add }}'
          priority: 3
          type: string
        - name: Drop
          pathTemplate: '{{ .spec.containers.securityContext.capabilities.drop }}'
          priority: 3
          type: string
        - name: Privileged
          pathTemplate: '{{ .spec.containers.securityContext.privileged }}'
          priority: 3
          type: bool
        - name: User
          pathTemplate: '{{ .spec.containers.securityContext.seLinuxOptions.user }}'
          priority: 3
          type: string
        - name: Role
          pathTemplate: '{{ .spec.containers.securityContext.seLinuxOptions.role }}'
          priority: 3
          type: string
        - name: Type
          pathTemplate: '{{ .spec.containers.securityContext.seLinuxOptions.type }}'
          priority: 3
          type: string
        - name: Level
          pathTemplate: '{{ .spec.containers.securityContext.seLinuxOptions.level
            }}'
          priority: 3
          type: string
        - name: GMSACredential Spec Name
          pathTemplate: '{{ .spec.containers.securityContext.windowsOptions.gmsaCredentialSpecName
            }}'
          priority: 3
          type: string
        - name: GMSACredential Spec
          pathTemplate: '{{ .spec.containers.securityContext.windowsOptions.gmsaCredentialSpec
            }}'
          priority: 3
          type: string
        - name: Run As User Name
          pathTemplate: '{{ .spec.containers.securityContext.windowsOptions.runAsUserName
            }}'
          priority: 3
          type: string
        - name: Run As User
          pathTemplate: '{{ .spec.containers.securityContext.runAsUser }}'
          priority: 3
          type: integer
        - name: Run As Group
          pathTemplate: '{{ .spec.containers.securityContext.runAsGroup }}'
          priority: 3
          type: integer
        - name: Run As Non Root
          pathTemplate: '{{ .spec.containers.securityContext.runAsNonRoot }}'
          priority: 3
          type: bool
        - name: Read Only Root Filesystem
          pathTemplate: '{{ .spec.containers.securityContext.readOnlyRootFilesystem
            }}'
          priority: 3
          type: bool
        - name: Allow Privilege Escalation
          pathTemplate: '{{ .spec.containers.securityContext.allowPrivilegeEscalation
            }}'
          priority: 3
          type: bool
        - name: Proc Mount
          pathTemplate: '{{ .spec.containers.securityContext.procMount }}'
          priority: 3
          type: string
        - name: Type
          pathTemplate: '{{ .spec.containers.securityContext.seccompProfile.type }}'
          priority: 3
          type: string
        - name: Localhost Profile
          pathTemplate: '{{ .spec.containers.securityContext.seccompProfile.localhostProfile
            }}'
          priority: 3
          type: string
        - name: Stdin
          pathTemplate: '{{ .spec.containers.stdin }}'
          priority: 3
          type: bool
        - name: Stdin Once
          pathTemplate: '{{ .spec.containers.stdinOnce }}'
          priority: 3
          type: bool
        - name: TTY
          pathTemplate: '{{ .spec.containers.tty }}'
          priority: 3
          type: bool
    info:
      actions:
        create: Never
      displayMode: List
      kind: Connection
      query:
        byLabel: offshoot
        type: GraphQL
      ref:
        group: appcatalog.appscode.com
        kind: AppBinding
      view:
        columns:
        - name: Name
          pathTemplate: '{{ .metadata.name }}'
          priority: 3
          type: string
        - name: Namespace
          pathTemplate: '{{ .metadata.namespace }}'
          priority: 3
          type: string
        - name: Labels
          pathTemplate: '{{ .metadata.labels | toRawJson }}'
          priority: 3
          type: object
        - name: Annotations
          pathTemplate: '{{ .metadata.annotations | toRawJson }}'
          priority: 1
          type: object
        - name: Type
          pathTemplate: '{{ .spec.type }}'
          priority: 3
          type: string
        - name: Version
          pathTemplate: '{{ .spec.version }}'
          priority: 3
          type: string
        - name: Service
          pathTemplate: '{{ .spec.clientConfig.service.name }}'
          priority: 3
          type: string
        - name: Secret
          pathTemplate: '{{ .spec.secret.name }}'
          priority: 3
          type: string
        - name: Backup Task
          pathTemplate: '{{ .spec.parameters.stash.addon.backupTask.name }}'
          priority: 1
          type: string
        - name: Restore Task
          pathTemplate: '{{ .spec.parameters.stash.addon.restoreTask.name }}'
          priority: 1
          type: string
        - name: Age
          pathTemplate: '{{ .metadata.creationTimestamp }}'
          priority: 3
          sort:
            enable: true
            template: '{{ .metadata.creationTimestamp | toDate "2006-01-02T15:04:05Z07:00"
              | unixEpoch }}'
            type: integer
          type: date
    insight:
      actions:
        create: Never
      displayMode: Field
      kind: Connection
      query:
        byLabel: view
        type: GraphQL
      ref:
        group: core.kubedb.com
        kind: MongoDBInsight
      view:
        columns:
        - name: Name
          pathTemplate: '{{ .metadata.name }}'
          priority: 1
          type: string
        - name: Namespace
          pathTemplate: '{{ .metadata.namespace }}'
          priority: 1
          type: string
        - name: Labels
          pathTemplate: '{{ .metadata.labels | toRawJson }}'
          priority: 1
          type: object
        - name: Annotations
          pathTemplate: '{{ .metadata.annotations | toRawJson }}'
          priority: 1
          type: object
        - name: Age
          pathTemplate: '{{ .metadata.creationTimestamp }}'
          priority: 1
          type: date
    name: Overview
  - blocks:
    - actions:
        create: Never
      displayMode: Field
      fieldPath: .spec.queries
      kind: Connection
      query:
        byLabel: view
        type: GraphQL
      ref:
        group: core.kubedb.com
        kind: MongoDBQueries
      view:
        columns:
        - name: Operation
          pathTemplate: '{{ .operation }}'
          priority: 3
          type: string
        - name: Database Name
          pathTemplate: '{{ .databaseName }}'
          priority: 3
          type: string
        - name: Collection Name
          pathTemplate: '{{ .collectionName }}'
          priority: 3
          type: string
        - name: Command
          pathTemplate: '{{ .command }}'
          priority: 3
          type: string
        - name: Count
          pathTemplate: '{{ .count }}'
          priority: 3
          type: integer
        - name: Avg Execution Time(millisecond)
          pathTemplate: '{{ .avgExecutionTimeMilliSeconds }}'
          priority: 3
          type: integer
        - name: Min Execution Time(millisecond)
          pathTemplate: '{{ .minExecutionTimeMilliSeconds }}'
          priority: 3
          type: integer
        - name: Max Execution Time(millisecond)
          pathTemplate: '{{ .maxExecutionTimeMilliSeconds }}'
          priority: 3
          type: integer
    - actions:
        create: Never
      displayMode: Field
      fieldPath: .spec.collections
      kind: Connection
      query:
        byLabel: view
        type: GraphQL
      ref:
        group: core.kubedb.com
        kind: MongoDBSchemaOverview
      view:
        columns:
        - name: Name
          pathTemplate: '{{ .name }}'
          priority: 3
          type: string
        - name: Total Size
          pathTemplate: '{{ .size }}'
          priority: 3
          type: integer
    info:
      actions:
        create: Never
      displayMode: Field
      kind: Connection
      query:
        byLabel: view
        type: GraphQL
      ref:
        group: core.kubedb.com
        kind: MongoDBInsight
      view:
        columns:
        - name: Name
          pathTemplate: '{{ .metadata.name }}'
          priority: 1
          type: string
        - name: Namespace
          pathTemplate: '{{ .metadata.namespace }}'
          priority: 1
          type: string
        - name: Labels
          pathTemplate: '{{ .metadata.labels | toRawJson }}'
          priority: 1
          type: object
        - name: Annotations
          pathTemplate: '{{ .metadata.annotations | toRawJson }}'
          priority: 1
          type: object
        - name: Age
          pathTemplate: '{{ .metadata.creationTimestamp }}'
          priority: 1
          type: date
    name: Database Insights
  - blocks:
    - actions:
        create: Always
      displayMode: List
      kind: Connection
      query:
        raw: |-
          query Find($src: String!, $targetGroup: String!, $targetKind: String!) {
            find(oid: $src) {
              backup_via(group: "stash.appscode.com", kind: "BackupConfiguration") {
                refs: offshoot(group: $targetGroup, kind: $targetKind) {
                  namespace
                  name
                }
              }
            }
          }
        type: GraphQL
      ref:
        group: stash.appscode.com
        kind: BackupSession
      view:
        columns:
        - name: Name
          pathTemplate: '{{ .metadata.name }}'
          priority: 3
          type: string
        - name: Namespace
          pathTemplate: '{{ .metadata.namespace }}'
          priority: 3
          type: string
        - name: Labels
          pathTemplate: '{{ .metadata.labels | toRawJson }}'
          priority: 3
          type: object
        - name: Invoker Kind
          pathTemplate: '{{ .spec.invoker.kind }}'
          priority: 3
          type: string
        - name: Invoker Name
          pathTemplate: '{{ .spec.invoker.name }}'
          priority: 3
          type: string
        - name: Phase
          pathTemplate: '{{ .status.phase }}'
          priority: 3
          type: string
        - name: Duration
          pathTemplate: '{{ .status.sessionDuration }}'
          priority: 3
          type: string
        - name: Age
          pathTemplate: '{{ .metadata.creationTimestamp }}'
          priority: 3
          sort:
            enable: true
            template: '{{ .metadata.creationTimestamp | toDate "2006-01-02T15:04:05Z07:00"
              | unixEpoch }}'
            type: integer
          type: date
    info:
      actions:
        create: IfEmpty
      displayMode: Field
      kind: Connection
      query:
        raw: |-
          query Find($src: String!, $targetGroup: String!, $targetKind: String!) {
            find(oid: $src) {
              backup_via(group: "stash.appscode.com", kind: "BackupConfiguration") {
                refs: view(group: $targetGroup, kind: $targetKind) {
                  namespace
                  name
                }
              }
            }
          }
        type: GraphQL
      ref:
        group: core.stash.appscode.com
        kind: BackupOverview
      view:
        columns:
        - name: Name
          pathTemplate: '{{ .metadata.name }}'
          priority: 1
          type: string
        - name: Namespace
          pathTemplate: '{{ .metadata.namespace }}'
          priority: 1
          type: string
        - name: Labels
          pathTemplate: '{{ .metadata.labels | toRawJson }}'
          priority: 1
          type: object
        - name: Annotations
          pathTemplate: '{{ .metadata.annotations | toRawJson }}'
          priority: 1
          type: object
        - name: Age
          pathTemplate: '{{ .metadata.creationTimestamp }}'
          priority: 1
          type: date
    name: Backups
  - blocks:
    - actions:
        create: Always
      displayMode: List
      kind: Connection
      query:
        byLabel: offshoot
        type: GraphQL
      ref:
        group: ops.kubedb.com
        kind: MongoDBOpsRequest
      view:
        columns:
        - name: Name
          pathTemplate: '{{ .metadata.name }}'
          priority: 3
          type: string
        - name: Namespace
          pathTemplate: '{{ .metadata.namespace }}'
          priority: 3
          type: string
        - name: Labels
          pathTemplate: '{{ .metadata.labels | toRawJson }}'
          priority: 3
          type: object
        - name: Type
          pathTemplate: '{{ .spec.type }}'
          priority: 3
          type: string
        - name: Target Database
          pathTemplate: '{{ .spec.databaseRef.name }}'
          priority: 3
          type: string
        - name: Status
          pathTemplate: '{{ .status.phase }}'
          priority: 3
          type: string
        - name: Age
          pathTemplate: '{{ .metadata.creationTimestamp }}'
          priority: 3
          type: date
    name: Operations
  resource:
    group: kubedb.com
    kind: MongoDB
    name: mongodbs
    scope: Namespaced
    version: v1alpha2
  tabBar:
    actions:
      create: Never
    displayMode: Field
    kind: Connection
    query:
      byLabel: view
      type: GraphQL
    ref:
      group: core.k8s.appscode.com
      kind: GenericResourceService
    view:
      columns:
      - name: Group
        pathTemplate: '{{ .spec.apiType.group }}'
        priority: 3
        type: string
      - name: Version
        pathTemplate: '{{ .spec.apiType.version }}'
        priority: 3
        type: string
      - name: Name
        pathTemplate: '{{ .spec.apiType.name }}'
        priority: 3
        type: string
      - name: Kind
        pathTemplate: '{{ .spec.apiType.kind }}'
        priority: 3
        type: string
      - name: Scope
        pathTemplate: '{{ .spec.apiType.scope }}'
        priority: 3
        type: string
      - name: Usage
        pathTemplate: '{{ .spec.facilities.exposed.usage }}'
        priority: 3
        type: string
      - name: Group
        pathTemplate: '{{ .spec.facilities.exposed.resource.group }}'
        priority: 3
        type: string
      - name: Version
        pathTemplate: '{{ .spec.facilities.exposed.resource.version }}'
        priority: 3
        type: string
      - name: Name
        pathTemplate: '{{ .spec.facilities.exposed.resource.name }}'
        priority: 3
        type: string
      - name: Kind
        pathTemplate: '{{ .spec.facilities.exposed.resource.kind }}'
        priority: 3
        type: string
      - name: Scope
        pathTemplate: '{{ .spec.facilities.exposed.resource.scope }}'
        priority: 3
        type: string
      - name: Namespace
        pathTemplate: '{{ .spec.facilities.exposed.refs.namespace }}'
        priority: 3
        type: string
      - name: Name
        pathTemplate: '{{ .spec.facilities.exposed.refs.name }}'
        priority: 3
        type: string
      - name: Usage
        pathTemplate: '{{ .spec.facilities.tls.usage }}'
        priority: 3
        type: string
      - name: Group
        pathTemplate: '{{ .spec.facilities.tls.resource.group }}'
        priority: 3
        type: string
      - name: Version
        pathTemplate: '{{ .spec.facilities.tls.resource.version }}'
        priority: 3
        type: string
      - name: Name
        pathTemplate: '{{ .spec.facilities.tls.resource.name }}'
        priority: 3
        type: string
      - name: Kind
        pathTemplate: '{{ .spec.facilities.tls.resource.kind }}'
        priority: 3
        type: string
      - name: Scope
        pathTemplate: '{{ .spec.facilities.tls.resource.scope }}'
        priority: 3
        type: string
      - name: Namespace
        pathTemplate: '{{ .spec.facilities.tls.refs.namespace }}'
        priority: 3
        type: string
      - name: Name
        pathTemplate: '{{ .spec.facilities.tls.refs.name }}'
        priority: 3
        type: string
      - name: Usage
        pathTemplate: '{{ .spec.facilities.backup.usage }}'
        priority: 3
        type: string
      - name: Group
        pathTemplate: '{{ .spec.facilities.backup.resource.group }}'
        priority: 3
        type: string
      - name: Version
        pathTemplate: '{{ .spec.facilities.backup.resource.version }}'
        priority: 3
        type: string
      - name: Name
        pathTemplate: '{{ .spec.facilities.backup.resource.name }}'
        priority: 3
        type: string
      - name: Kind
        pathTemplate: '{{ .spec.facilities.backup.resource.kind }}'
        priority: 3
        type: string
      - name: Scope
        pathTemplate: '{{ .spec.facilities.backup.resource.scope }}'
        priority: 3
        type: string
      - name: Namespace
        pathTemplate: '{{ .spec.facilities.backup.refs.namespace }}'
        priority: 3
        type: string
      - name: Name
        pathTemplate: '{{ .spec.facilities.backup.refs.name }}'
        priority: 3
        type: string
      - name: Usage
        pathTemplate: '{{ .spec.facilities.monitoring.usage }}'
        priority: 3
        type: string
      - name: Group
        pathTemplate: '{{ .spec.facilities.monitoring.resource.group }}'
        priority: 3
        type: string
      - name: Version
        pathTemplate: '{{ .spec.facilities.monitoring.resource.version }}'
        priority: 3
        type: string
      - name: Name
        pathTemplate: '{{ .spec.facilities.monitoring.resource.name }}'
        priority: 3
        type: string
      - name: Kind
        pathTemplate: '{{ .spec.facilities.monitoring.resource.kind }}'
        priority: 3
        type: string
      - name: Scope
        pathTemplate: '{{ .spec.facilities.monitoring.resource.scope }}'
        priority: 3
        type: string
      - name: Namespace
        pathTemplate: '{{ .spec.facilities.monitoring.refs.namespace }}'
        priority: 3
        type: string
      - name: Name
        pathTemplate: '{{ .spec.facilities.monitoring.refs.name }}'
        priority: 3
        type: string
      - name: Status
        pathTemplate: '{{ .spec.status.status }}'
        priority: 3
        type: string
      - name: Message
        pathTemplate: '{{ .spec.status.message }}'
        priority: 3
        type: string
  ui:
    editor:
      name: kubedbcom-mongodb-editor
      url: https://bundles.byte.builders/ui/
      version: v0.3.0
    options:
      name: kubedbcom-mongodb-editor-options
      url: https://bundles.byte.builders/ui/
      version: v0.3.0
