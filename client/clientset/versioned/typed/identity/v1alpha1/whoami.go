/*
Copyright The Kubeshield Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"

	v1alpha1 "kubeshield.dev/identity-server/apis/identity/v1alpha1"
	scheme "kubeshield.dev/identity-server/client/clientset/versioned/scheme"

	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	rest "k8s.io/client-go/rest"
)

// WhoAmIsGetter has a method to return a WhoAmIInterface.
// A group's client should implement this interface.
type WhoAmIsGetter interface {
	WhoAmIs() WhoAmIInterface
}

// WhoAmIInterface has methods to work with WhoAmI resources.
type WhoAmIInterface interface {
	Create(ctx context.Context, whoAmI *v1alpha1.WhoAmI, opts v1.CreateOptions) (*v1alpha1.WhoAmI, error)
	WhoAmIExpansion
}

// whoAmIs implements WhoAmIInterface
type whoAmIs struct {
	client rest.Interface
}

// newWhoAmIs returns a WhoAmIs
func newWhoAmIs(c *IdentityV1alpha1Client) *whoAmIs {
	return &whoAmIs{
		client: c.RESTClient(),
	}
}

// Create takes the representation of a whoAmI and creates it.  Returns the server's representation of the whoAmI, and an error, if there is any.
func (c *whoAmIs) Create(ctx context.Context, whoAmI *v1alpha1.WhoAmI, opts v1.CreateOptions) (result *v1alpha1.WhoAmI, err error) {
	result = &v1alpha1.WhoAmI{}
	err = c.client.Post().
		Resource("whoamis").
		VersionedParams(&opts, scheme.ParameterCodec).
		Body(whoAmI).
		Do(ctx).
		Into(result)
	return
}
