// +build !ignore_autogenerated

/*
Copyright The Kubeshield Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	identity "kubeshield.dev/identity-server/apis/identity"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddConversionFunc((*identity.UserInfo)(nil), (*UserInfo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_identity_UserInfo_To_v1alpha1_UserInfo(a.(*identity.UserInfo), b.(*UserInfo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*identity.WhoAmIResponse)(nil), (*WhoAmIResponse)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_identity_WhoAmIResponse_To_v1alpha1_WhoAmIResponse(a.(*identity.WhoAmIResponse), b.(*WhoAmIResponse), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*identity.WhoAmI)(nil), (*WhoAmI)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_identity_WhoAmI_To_v1alpha1_WhoAmI(a.(*identity.WhoAmI), b.(*WhoAmI), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*UserInfo)(nil), (*identity.UserInfo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_UserInfo_To_identity_UserInfo(a.(*UserInfo), b.(*identity.UserInfo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*WhoAmIResponse)(nil), (*identity.WhoAmIResponse)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_WhoAmIResponse_To_identity_WhoAmIResponse(a.(*WhoAmIResponse), b.(*identity.WhoAmIResponse), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*WhoAmI)(nil), (*identity.WhoAmI)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_WhoAmI_To_identity_WhoAmI(a.(*WhoAmI), b.(*identity.WhoAmI), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_UserInfo_To_identity_UserInfo(in *UserInfo, out *identity.UserInfo, s conversion.Scope) error {
	out.Username = in.Username
	out.UID = in.UID
	out.Groups = *(*[]string)(unsafe.Pointer(&in.Groups))
	out.Extra = *(*map[string]identity.ExtraValue)(unsafe.Pointer(&in.Extra))
	return nil
}

func autoConvert_identity_UserInfo_To_v1alpha1_UserInfo(in *identity.UserInfo, out *UserInfo, s conversion.Scope) error {
	out.Username = in.Username
	out.UID = in.UID
	out.Groups = *(*[]string)(unsafe.Pointer(&in.Groups))
	out.Extra = *(*map[string]ExtraValue)(unsafe.Pointer(&in.Extra))
	return nil
}

func autoConvert_v1alpha1_WhoAmI_To_identity_WhoAmI(in *WhoAmI, out *identity.WhoAmI, s conversion.Scope) error {
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(identity.WhoAmIResponse)
		if err := Convert_v1alpha1_WhoAmIResponse_To_identity_WhoAmIResponse(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Response = nil
	}
	return nil
}

func autoConvert_identity_WhoAmI_To_v1alpha1_WhoAmI(in *identity.WhoAmI, out *WhoAmI, s conversion.Scope) error {
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(WhoAmIResponse)
		if err := Convert_identity_WhoAmIResponse_To_v1alpha1_WhoAmIResponse(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Response = nil
	}
	return nil
}

func autoConvert_v1alpha1_WhoAmIResponse_To_identity_WhoAmIResponse(in *WhoAmIResponse, out *identity.WhoAmIResponse, s conversion.Scope) error {
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(identity.UserInfo)
		if err := Convert_v1alpha1_UserInfo_To_identity_UserInfo(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.User = nil
	}
	return nil
}

func autoConvert_identity_WhoAmIResponse_To_v1alpha1_WhoAmIResponse(in *identity.WhoAmIResponse, out *WhoAmIResponse, s conversion.Scope) error {
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(UserInfo)
		if err := Convert_identity_UserInfo_To_v1alpha1_UserInfo(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.User = nil
	}
	return nil
}
