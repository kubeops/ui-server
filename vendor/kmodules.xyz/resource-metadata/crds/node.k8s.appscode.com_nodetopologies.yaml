
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: nodetopologies.node.k8s.appscode.com
spec:
  group: node.k8s.appscode.com
  names:
    kind: NodeTopology
    listKind: NodeTopologyList
    plural: nodetopologies
    singular: nodetopology
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              nodeGroups:
                items:
                  properties:
                    allocatable:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Allocatable represents the total resources of
                        a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity'
                      type: object
                    topologyValue:
                      type: string
                  required:
                  - allocatable
                  - topologyValue
                  type: object
                type: array
              nodeSelectionPolicy:
                enum:
                - LabelSelector
                - Taint
                type: string
              requirements:
                description: Requirements are layered with GetLabels and applied to
                  every node.
                items:
                  description: A node selector requirement is a selector that contains
                    values, a key, and an operator that relates the key and values.
                  properties:
                    key:
                      description: The label key that the selector applies to.
                      type: string
                    operator:
                      description: Represents a key's relationship to a set of values.
                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and
                        Lt.
                      type: string
                    values:
                      description: An array of string values. If the operator is In
                        or NotIn, the values array must be non-empty. If the operator
                        is Exists or DoesNotExist, the values array must be empty.
                        If the operator is Gt or Lt, the values array must have a
                        single element, which will be interpreted as an integer. This
                        array is replaced during a strategic merge patch.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                  required:
                  - key
                  - operator
                  type: object
                maxItems: 30
                type: array
                x-kubernetes-validations:
                - message: requirements with operator 'In' must have a value defined
                  rule: 'self.all(x, x.operator == ''In'' ? x.values.size() != 0 :
                    true)'
                - message: requirements operator 'Gt' or 'Lt' must have a single positive
                    integer value
                  rule: 'self.all(x, (x.operator == ''Gt'' || x.operator == ''Lt'')
                    ? (x.values.size() == 1 && int(x.values[0]) >= 0) : true)'
              topologyKey:
                type: string
            required:
            - nodeSelectionPolicy
            - topologyKey
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
