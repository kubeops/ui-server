apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: amplify.aws.upbound.io
    k8s.io/kind: App
    k8s.io/resource: apps
    k8s.io/version: v1beta1
  name: amplify.aws.upbound.io-v1beta1-apps
spec:
  resource:
    group: amplify.aws.upbound.io
    kind: App
    name: apps
    scope: Cluster
    version: v1beta1
  validation:
    openAPIV3Schema:
      description: App is the Schema for the Apps API. Provides an Amplify App resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: AppSpec defines the desired state of App
          properties:
            deletionPolicy:
              default: Delete
              description: 'DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
              enum:
              - Orphan
              - Delete
              type: string
            forProvider:
              properties:
                accessTokenSecretRef:
                  description: Personal access token for a third-party source control system for an Amplify app. The personal access token is used to create a webhook and a read-only deploy key. The token is not stored.
                  properties:
                    key:
                      description: The key to select.
                      type: string
                    name:
                      description: Name of the secret.
                      type: string
                    namespace:
                      description: Namespace of the secret.
                      type: string
                  required:
                  - key
                  - name
                  - namespace
                  type: object
                autoBranchCreationConfig:
                  description: Automated branch creation configuration for an Amplify app. An auto_branch_creation_config block is documented below.
                  items:
                    properties:
                      basicAuthCredentialsSecretRef:
                        description: Basic authorization credentials for the autocreated branch.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      buildSpec:
                        description: Build specification (build spec) for the autocreated branch.
                        type: string
                      enableAutoBuild:
                        description: Enables auto building for the autocreated branch.
                        type: boolean
                      enableBasicAuth:
                        description: Enables basic authorization for the autocreated branch.
                        type: boolean
                      enablePerformanceMode:
                        description: Enables performance mode for the branch.
                        type: boolean
                      enablePullRequestPreview:
                        description: Enables pull request previews for the autocreated branch.
                        type: boolean
                      environmentVariables:
                        additionalProperties:
                          type: string
                        description: Environment variables for the autocreated branch.
                        type: object
                      framework:
                        description: Framework for the autocreated branch.
                        type: string
                      pullRequestEnvironmentName:
                        description: Amplify environment name for the pull request.
                        type: string
                      stage:
                        description: 'Describes the current stage for the autocreated branch. Valid values: PRODUCTION, BETA, DEVELOPMENT, EXPERIMENTAL, PULL_REQUEST.'
                        type: string
                    type: object
                  type: array
                autoBranchCreationPatterns:
                  description: Automated branch creation glob patterns for an Amplify app.
                  items:
                    type: string
                  type: array
                basicAuthCredentialsSecretRef:
                  description: Credentials for basic authorization for an Amplify app.
                  properties:
                    key:
                      description: The key to select.
                      type: string
                    name:
                      description: Name of the secret.
                      type: string
                    namespace:
                      description: Namespace of the secret.
                      type: string
                  required:
                  - key
                  - name
                  - namespace
                  type: object
                buildSpec:
                  description: The build specification (build spec) for an Amplify app.
                  type: string
                customRule:
                  description: Custom rewrite and redirect rules for an Amplify app. A custom_rule block is documented below.
                  items:
                    properties:
                      condition:
                        description: Condition for a URL rewrite or redirect rule, such as a country code.
                        type: string
                      source:
                        description: Source pattern for a URL rewrite or redirect rule.
                        type: string
                      status:
                        description: 'Status code for a URL rewrite or redirect rule. Valid values: 200, 301, 302, 404, 404-200.'
                        type: string
                      target:
                        description: Target pattern for a URL rewrite or redirect rule.
                        type: string
                    type: object
                  type: array
                description:
                  description: Description for an Amplify app.
                  type: string
                enableAutoBranchCreation:
                  description: Enables automated branch creation for an Amplify app.
                  type: boolean
                enableBasicAuth:
                  description: Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app.
                  type: boolean
                enableBranchAutoBuild:
                  description: Enables auto-building of branches for the Amplify App.
                  type: boolean
                enableBranchAutoDeletion:
                  description: Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository.
                  type: boolean
                environmentVariables:
                  additionalProperties:
                    type: string
                  description: Environment variables map for an Amplify app.
                  type: object
                iamServiceRoleArn:
                  description: AWS Identity and Access Management (IAM) service role for an Amplify app.
                  type: string
                iamServiceRoleArnRef:
                  description: Reference to a Role in iam to populate iamServiceRoleArn.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                    policy:
                      description: Policies for referencing.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  required:
                  - name
                  type: object
                iamServiceRoleArnSelector:
                  description: Selector for a Role in iam to populate iamServiceRoleArn.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels is selected.
                      type: object
                    policy:
                      description: Policies for selection.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  type: object
                name:
                  description: Name for an Amplify app.
                  type: string
                oauthTokenSecretRef:
                  description: OAuth token for a third-party source control system for an Amplify app. The OAuth token is used to create a webhook and a read-only deploy key. The OAuth token is not stored.
                  properties:
                    key:
                      description: The key to select.
                      type: string
                    name:
                      description: Name of the secret.
                      type: string
                    namespace:
                      description: Namespace of the secret.
                      type: string
                  required:
                  - key
                  - name
                  - namespace
                  type: object
                platform:
                  description: 'Platform or framework for an Amplify app. Valid values: WEB, WEB_COMPUTE. Default value: WEB.'
                  type: string
                region:
                  description: Region is the region you'd like your resource to be created in.
                  type: string
                repository:
                  description: Repository for an Amplify app.
                  type: string
                tags:
                  additionalProperties:
                    type: string
                  description: Key-value map of resource tags.
                  type: object
              required:
              - region
              type: object
            initProvider:
              description: THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.
              properties:
                autoBranchCreationConfig:
                  description: Automated branch creation configuration for an Amplify app. An auto_branch_creation_config block is documented below.
                  items:
                    properties:
                      buildSpec:
                        description: Build specification (build spec) for the autocreated branch.
                        type: string
                      enableAutoBuild:
                        description: Enables auto building for the autocreated branch.
                        type: boolean
                      enableBasicAuth:
                        description: Enables basic authorization for the autocreated branch.
                        type: boolean
                      enablePerformanceMode:
                        description: Enables performance mode for the branch.
                        type: boolean
                      enablePullRequestPreview:
                        description: Enables pull request previews for the autocreated branch.
                        type: boolean
                      environmentVariables:
                        additionalProperties:
                          type: string
                        description: Environment variables for the autocreated branch.
                        type: object
                      framework:
                        description: Framework for the autocreated branch.
                        type: string
                      pullRequestEnvironmentName:
                        description: Amplify environment name for the pull request.
                        type: string
                      stage:
                        description: 'Describes the current stage for the autocreated branch. Valid values: PRODUCTION, BETA, DEVELOPMENT, EXPERIMENTAL, PULL_REQUEST.'
                        type: string
                    type: object
                  type: array
                autoBranchCreationPatterns:
                  description: Automated branch creation glob patterns for an Amplify app.
                  items:
                    type: string
                  type: array
                buildSpec:
                  description: The build specification (build spec) for an Amplify app.
                  type: string
                customRule:
                  description: Custom rewrite and redirect rules for an Amplify app. A custom_rule block is documented below.
                  items:
                    properties:
                      condition:
                        description: Condition for a URL rewrite or redirect rule, such as a country code.
                        type: string
                      source:
                        description: Source pattern for a URL rewrite or redirect rule.
                        type: string
                      status:
                        description: 'Status code for a URL rewrite or redirect rule. Valid values: 200, 301, 302, 404, 404-200.'
                        type: string
                      target:
                        description: Target pattern for a URL rewrite or redirect rule.
                        type: string
                    type: object
                  type: array
                description:
                  description: Description for an Amplify app.
                  type: string
                enableAutoBranchCreation:
                  description: Enables automated branch creation for an Amplify app.
                  type: boolean
                enableBasicAuth:
                  description: Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app.
                  type: boolean
                enableBranchAutoBuild:
                  description: Enables auto-building of branches for the Amplify App.
                  type: boolean
                enableBranchAutoDeletion:
                  description: Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository.
                  type: boolean
                environmentVariables:
                  additionalProperties:
                    type: string
                  description: Environment variables map for an Amplify app.
                  type: object
                name:
                  description: Name for an Amplify app.
                  type: string
                platform:
                  description: 'Platform or framework for an Amplify app. Valid values: WEB, WEB_COMPUTE. Default value: WEB.'
                  type: string
                repository:
                  description: Repository for an Amplify app.
                  type: string
                tags:
                  additionalProperties:
                    type: string
                  description: Key-value map of resource tags.
                  type: object
              type: object
            managementPolicies:
              default:
              - '*'
              description: 'THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
              items:
                description: A ManagementAction represents an action that the Crossplane controllers can take on an external resource.
                enum:
                - Observe
                - Create
                - Update
                - Delete
                - LateInitialize
                - '*'
                type: string
              type: array
            providerConfigRef:
              default:
                name: default
              description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
                policy:
                  description: Policies for referencing.
                  properties:
                    resolution:
                      default: Required
                      description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                      enum:
                      - Required
                      - Optional
                      type: string
                    resolve:
                      description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                      enum:
                      - Always
                      - IfNotPresent
                      type: string
                  type: object
              required:
              - name
              type: object
            publishConnectionDetailsTo:
              description: PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
              properties:
                configRef:
                  default:
                    name: default
                  description: SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                    policy:
                      description: Policies for referencing.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  required:
                  - name
                  type: object
                metadata:
                  description: Metadata is the metadata for connection secret.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
                      type: object
                    type:
                      description: Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
                      type: string
                  type: object
                name:
                  description: Name is the name of the connection secret.
                  type: string
              required:
              - name
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          type: object
          x-kubernetes-validations:
          - message: spec.forProvider.name is a required parameter
            rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies || ''Update'' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))'
      required:
      - spec
      type: object
