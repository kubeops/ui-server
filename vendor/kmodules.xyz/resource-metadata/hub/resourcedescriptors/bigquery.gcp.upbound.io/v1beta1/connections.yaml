apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: bigquery.gcp.upbound.io
    k8s.io/kind: Connection
    k8s.io/resource: connections
    k8s.io/version: v1beta1
  name: bigquery.gcp.upbound.io-v1beta1-connections
spec:
  resource:
    group: bigquery.gcp.upbound.io
    kind: Connection
    name: connections
    scope: Cluster
    version: v1beta1
  validation:
    openAPIV3Schema:
      description: Connection is the Schema for the Connections API. A connection allows BigQuery connections to external data sources.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: ConnectionSpec defines the desired state of Connection
          properties:
            deletionPolicy:
              default: Delete
              description: 'DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
              enum:
              - Orphan
              - Delete
              type: string
            forProvider:
              properties:
                aws:
                  description: Connection properties specific to Amazon Web Services. Structure is documented below.
                  items:
                    properties:
                      accessRole:
                        description: Authentication using Google owned service account to assume into customer's AWS IAM Role. Structure is documented below.
                        items:
                          properties:
                            iamRoleId:
                              description: The userâ€™s AWS IAM Role that trusts the Google-owned AWS IAM user Connection.
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
                azure:
                  description: Container for connection properties specific to Azure. Structure is documented below.
                  items:
                    properties:
                      customerTenantId:
                        description: The id of customer's directory that host the data.
                        type: string
                      federatedApplicationClientId:
                        description: The Azure Application (client) ID where the federated credentials will be hosted.
                        type: string
                    type: object
                  type: array
                cloudResource:
                  description: Container for connection properties for delegation of access to GCP resources. Structure is documented below.
                  items:
                    type: object
                  type: array
                cloudSpanner:
                  description: Connection properties specific to Cloud Spanner Structure is documented below.
                  items:
                    properties:
                      database:
                        description: Cloud Spanner database in the form `project/instance/database'
                        type: string
                      useParallelism:
                        description: If parallelism should be used when reading from Cloud Spanner
                        type: boolean
                      useServerlessAnalytics:
                        description: If the serverless analytics service should be used to read data from Cloud Spanner. useParallelism must be set when using serverless analytics
                        type: boolean
                    type: object
                  type: array
                cloudSql:
                  description: Connection properties specific to the Cloud SQL. Structure is documented below.
                  items:
                    properties:
                      credential:
                        description: Cloud SQL properties. Structure is documented below.
                        items:
                          properties:
                            passwordSecretRef:
                              description: 'Password for database. Note: This property is sensitive and will not be displayed in the plan.'
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: Name of the secret.
                                  type: string
                                namespace:
                                  description: Namespace of the secret.
                                  type: string
                              required:
                              - key
                              - name
                              - namespace
                              type: object
                            username:
                              description: Username for database.
                              type: string
                            usernameRef:
                              description: Reference to a User in sql to populate username.
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            usernameSelector:
                              description: Selector for a User in sql to populate username.
                              properties:
                                matchControllerRef:
                                  description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with matching labels is selected.
                                  type: object
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          required:
                          - passwordSecretRef
                          type: object
                        type: array
                      database:
                        description: Database name.
                        type: string
                      databaseRef:
                        description: Reference to a Database in sql to populate database.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      databaseSelector:
                        description: Selector for a Database in sql to populate database.
                        properties:
                          matchControllerRef:
                            description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      instanceId:
                        description: Cloud SQL instance ID in the form project:location:instance.
                        type: string
                      instanceIdRef:
                        description: Reference to a DatabaseInstance in sql to populate instanceId.
                        properties:
                          name:
                            description: Name of the referenced object.
                            type: string
                          policy:
                            description: Policies for referencing.
                            properties:
                              resolution:
                                default: Required
                                description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        required:
                        - name
                        type: object
                      instanceIdSelector:
                        description: Selector for a DatabaseInstance in sql to populate instanceId.
                        properties:
                          matchControllerRef:
                            description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                            type: boolean
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: MatchLabels ensures an object with matching labels is selected.
                            type: object
                          policy:
                            description: Policies for selection.
                            properties:
                              resolution:
                                default: Required
                                description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                                enum:
                                - Required
                                - Optional
                                type: string
                              resolve:
                                description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                                enum:
                                - Always
                                - IfNotPresent
                                type: string
                            type: object
                        type: object
                      type:
                        description: 'Type of the Cloud SQL database. Possible values are: DATABASE_TYPE_UNSPECIFIED, POSTGRES, MYSQL.'
                        type: string
                    type: object
                  type: array
                connectionId:
                  description: Optional connection id that should be assigned to the created connection.
                  type: string
                description:
                  description: A descriptive description for the connection
                  type: string
                friendlyName:
                  description: A descriptive name for the connection
                  type: string
                location:
                  description: 'The geographic location where the connection should reside. Cloud SQL instance must be in the same location as the connection with following exceptions: Cloud SQL us-central1 maps to BigQuery US, Cloud SQL europe-west1 maps to BigQuery EU. Examples: US, EU, asia-northeast1, us-central1, europe-west1. Spanner Connections same as spanner region AWS allowed regions are aws-us-east-1 Azure allowed regions are azure-eastus2'
                  type: string
                project:
                  description: The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
                  type: string
              type: object
            initProvider:
              description: THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.
              properties:
                aws:
                  description: Connection properties specific to Amazon Web Services. Structure is documented below.
                  items:
                    properties:
                      accessRole:
                        description: Authentication using Google owned service account to assume into customer's AWS IAM Role. Structure is documented below.
                        items:
                          properties:
                            iamRoleId:
                              description: The userâ€™s AWS IAM Role that trusts the Google-owned AWS IAM user Connection.
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
                azure:
                  description: Container for connection properties specific to Azure. Structure is documented below.
                  items:
                    properties:
                      customerTenantId:
                        description: The id of customer's directory that host the data.
                        type: string
                      federatedApplicationClientId:
                        description: The Azure Application (client) ID where the federated credentials will be hosted.
                        type: string
                    type: object
                  type: array
                cloudResource:
                  description: Container for connection properties for delegation of access to GCP resources. Structure is documented below.
                  items:
                    type: object
                  type: array
                cloudSpanner:
                  description: Connection properties specific to Cloud Spanner Structure is documented below.
                  items:
                    properties:
                      database:
                        description: Cloud Spanner database in the form `project/instance/database'
                        type: string
                      useParallelism:
                        description: If parallelism should be used when reading from Cloud Spanner
                        type: boolean
                      useServerlessAnalytics:
                        description: If the serverless analytics service should be used to read data from Cloud Spanner. useParallelism must be set when using serverless analytics
                        type: boolean
                    type: object
                  type: array
                cloudSql:
                  description: Connection properties specific to the Cloud SQL. Structure is documented below.
                  items:
                    properties:
                      credential:
                        description: Cloud SQL properties. Structure is documented below.
                        items:
                          type: object
                        type: array
                      type:
                        description: 'Type of the Cloud SQL database. Possible values are: DATABASE_TYPE_UNSPECIFIED, POSTGRES, MYSQL.'
                        type: string
                    type: object
                  type: array
                connectionId:
                  description: Optional connection id that should be assigned to the created connection.
                  type: string
                description:
                  description: A descriptive description for the connection
                  type: string
                friendlyName:
                  description: A descriptive name for the connection
                  type: string
                location:
                  description: 'The geographic location where the connection should reside. Cloud SQL instance must be in the same location as the connection with following exceptions: Cloud SQL us-central1 maps to BigQuery US, Cloud SQL europe-west1 maps to BigQuery EU. Examples: US, EU, asia-northeast1, us-central1, europe-west1. Spanner Connections same as spanner region AWS allowed regions are aws-us-east-1 Azure allowed regions are azure-eastus2'
                  type: string
                project:
                  description: The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
                  type: string
              type: object
            managementPolicies:
              default:
              - '*'
              description: 'THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
              items:
                description: A ManagementAction represents an action that the Crossplane controllers can take on an external resource.
                enum:
                - Observe
                - Create
                - Update
                - Delete
                - LateInitialize
                - '*'
                type: string
              type: array
            providerConfigRef:
              default:
                name: default
              description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
                policy:
                  description: Policies for referencing.
                  properties:
                    resolution:
                      default: Required
                      description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                      enum:
                      - Required
                      - Optional
                      type: string
                    resolve:
                      description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                      enum:
                      - Always
                      - IfNotPresent
                      type: string
                  type: object
              required:
              - name
              type: object
            publishConnectionDetailsTo:
              description: PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
              properties:
                configRef:
                  default:
                    name: default
                  description: SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                    policy:
                      description: Policies for referencing.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  required:
                  - name
                  type: object
                metadata:
                  description: Metadata is the metadata for connection secret.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
                      type: object
                    type:
                      description: Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
                      type: string
                  type: object
                name:
                  description: Name is the name of the connection secret.
                  type: string
              required:
              - name
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          type: object
      required:
      - spec
      type: object
