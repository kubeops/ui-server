apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: alloydb.gcp.upbound.io
    k8s.io/kind: Cluster
    k8s.io/resource: clusters
    k8s.io/version: v1beta1
  name: alloydb.gcp.upbound.io-v1beta1-clusters
spec:
  resource:
    group: alloydb.gcp.upbound.io
    kind: Cluster
    name: clusters
    scope: Cluster
    version: v1beta1
  validation:
    openAPIV3Schema:
      description: Cluster is the Schema for the Clusters API. A managed alloydb cluster.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: ClusterSpec defines the desired state of Cluster
          properties:
            deletionPolicy:
              default: Delete
              description: 'DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
              enum:
              - Orphan
              - Delete
              type: string
            forProvider:
              properties:
                automatedBackupPolicy:
                  description: The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default. Structure is documented below.
                  items:
                    properties:
                      backupWindow:
                        description: 'The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed. The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour. A duration in seconds with up to nine fractional digits, terminated by ''s''. Example: "3.5s".'
                        type: string
                      enabled:
                        description: Whether automated backups are enabled.
                        type: boolean
                      encryptionConfig:
                        description: EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key). Structure is documented below.
                        items:
                          properties:
                            kmsKeyName:
                              description: 'The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].'
                              type: string
                          type: object
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels to apply to backups created using this configuration.
                        type: object
                      location:
                        description: The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster.
                        type: string
                      quantityBasedRetention:
                        description: Quantity-based Backup retention policy to retain recent backups. Conflicts with 'time_based_retention', both can't be set together. Structure is documented below.
                        items:
                          properties:
                            count:
                              description: The number of backups to retain.
                              type: number
                          type: object
                        type: array
                      timeBasedRetention:
                        description: Time-based Backup retention policy. Conflicts with 'quantity_based_retention', both can't be set together. Structure is documented below.
                        items:
                          properties:
                            retentionPeriod:
                              description: 'The retention period. A duration in seconds with up to nine fractional digits, terminated by ''s''. Example: "3.5s".'
                              type: string
                          type: object
                        type: array
                      weeklySchedule:
                        description: Weekly schedule for the Backup. Structure is documented below.
                        items:
                          properties:
                            daysOfWeek:
                              description: 'The days of the week to perform a backup. At least one day of the week must be provided. Each value may be one of: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.'
                              items:
                                type: string
                              type: array
                            startTimes:
                              description: The times during the day to start a backup. At least one start time must be provided. The start times are assumed to be in UTC and to be an exact hour (e.g., 04:00:00). Structure is documented below.
                              items:
                                properties:
                                  hours:
                                    description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
                                    type: number
                                  minutes:
                                    description: Minutes of hour of day. Currently, only the value 0 is supported.
                                    type: number
                                  nanos:
                                    description: Fractions of seconds in nanoseconds. Currently, only the value 0 is supported.
                                    type: number
                                  seconds:
                                    description: Seconds of minutes of the time. Currently, only the value 0 is supported.
                                    type: number
                                type: object
                              type: array
                          type: object
                        type: array
                    type: object
                  type: array
                continuousBackupConfig:
                  description: The continuous backup config for this cluster. If no policy is provided then the default policy will be used. The default policy takes one backup a day and retains backups for 14 days. Structure is documented below.
                  items:
                    properties:
                      enabled:
                        description: Whether continuous backup recovery is enabled. If not set, defaults to true.
                        type: boolean
                      encryptionConfig:
                        description: EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key). Structure is documented below.
                        items:
                          properties:
                            kmsKeyName:
                              description: 'The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].'
                              type: string
                          type: object
                        type: array
                      recoveryWindowDays:
                        description: The numbers of days that are eligible to restore from using PITR. To support the entire recovery window, backups and logs are retained for one day more than the recovery window. If not set, defaults to 14 days.
                        type: number
                    type: object
                  type: array
                displayName:
                  description: User-settable and human-readable display name for the Cluster.
                  type: string
                encryptionConfig:
                  description: EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key). Structure is documented below.
                  items:
                    properties:
                      kmsKeyName:
                        description: 'The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].'
                        type: string
                    type: object
                  type: array
                initialUser:
                  description: Initial user to setup during cluster creation. Structure is documented below.
                  items:
                    properties:
                      passwordSecretRef:
                        description: 'The initial password for the user. Note: This property is sensitive and will not be displayed in the plan.'
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      user:
                        description: The database username.
                        type: string
                    required:
                    - passwordSecretRef
                    type: object
                  type: array
                labels:
                  additionalProperties:
                    type: string
                  description: User-defined labels for the alloydb cluster.
                  type: object
                location:
                  description: The location where the alloydb cluster should reside.
                  type: string
                network:
                  description: 'The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form: "projects/{projectNumber}/global/networks/{network_id}".'
                  type: string
                networkRef:
                  description: Reference to a Network in compute to populate network.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                    policy:
                      description: Policies for referencing.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  required:
                  - name
                  type: object
                networkSelector:
                  description: Selector for a Network in compute to populate network.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels is selected.
                      type: object
                    policy:
                      description: Policies for selection.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  type: object
                project:
                  description: The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
                  type: string
              required:
              - location
              type: object
            initProvider:
              description: THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.
              properties:
                automatedBackupPolicy:
                  description: The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default. Structure is documented below.
                  items:
                    properties:
                      backupWindow:
                        description: 'The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed. The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour. A duration in seconds with up to nine fractional digits, terminated by ''s''. Example: "3.5s".'
                        type: string
                      enabled:
                        description: Whether automated backups are enabled.
                        type: boolean
                      encryptionConfig:
                        description: EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key). Structure is documented below.
                        items:
                          properties:
                            kmsKeyName:
                              description: 'The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].'
                              type: string
                          type: object
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels to apply to backups created using this configuration.
                        type: object
                      quantityBasedRetention:
                        description: Quantity-based Backup retention policy to retain recent backups. Conflicts with 'time_based_retention', both can't be set together. Structure is documented below.
                        items:
                          properties:
                            count:
                              description: The number of backups to retain.
                              type: number
                          type: object
                        type: array
                      timeBasedRetention:
                        description: Time-based Backup retention policy. Conflicts with 'quantity_based_retention', both can't be set together. Structure is documented below.
                        items:
                          properties:
                            retentionPeriod:
                              description: 'The retention period. A duration in seconds with up to nine fractional digits, terminated by ''s''. Example: "3.5s".'
                              type: string
                          type: object
                        type: array
                      weeklySchedule:
                        description: Weekly schedule for the Backup. Structure is documented below.
                        items:
                          properties:
                            daysOfWeek:
                              description: 'The days of the week to perform a backup. At least one day of the week must be provided. Each value may be one of: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.'
                              items:
                                type: string
                              type: array
                            startTimes:
                              description: The times during the day to start a backup. At least one start time must be provided. The start times are assumed to be in UTC and to be an exact hour (e.g., 04:00:00). Structure is documented below.
                              items:
                                properties:
                                  hours:
                                    description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
                                    type: number
                                  minutes:
                                    description: Minutes of hour of day. Currently, only the value 0 is supported.
                                    type: number
                                  nanos:
                                    description: Fractions of seconds in nanoseconds. Currently, only the value 0 is supported.
                                    type: number
                                  seconds:
                                    description: Seconds of minutes of the time. Currently, only the value 0 is supported.
                                    type: number
                                type: object
                              type: array
                          type: object
                        type: array
                    type: object
                  type: array
                continuousBackupConfig:
                  description: The continuous backup config for this cluster. If no policy is provided then the default policy will be used. The default policy takes one backup a day and retains backups for 14 days. Structure is documented below.
                  items:
                    properties:
                      enabled:
                        description: Whether continuous backup recovery is enabled. If not set, defaults to true.
                        type: boolean
                      encryptionConfig:
                        description: EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key). Structure is documented below.
                        items:
                          properties:
                            kmsKeyName:
                              description: 'The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].'
                              type: string
                          type: object
                        type: array
                      recoveryWindowDays:
                        description: The numbers of days that are eligible to restore from using PITR. To support the entire recovery window, backups and logs are retained for one day more than the recovery window. If not set, defaults to 14 days.
                        type: number
                    type: object
                  type: array
                displayName:
                  description: User-settable and human-readable display name for the Cluster.
                  type: string
                encryptionConfig:
                  description: EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key). Structure is documented below.
                  items:
                    properties:
                      kmsKeyName:
                        description: 'The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].'
                        type: string
                    type: object
                  type: array
                initialUser:
                  description: Initial user to setup during cluster creation. Structure is documented below.
                  items:
                    properties:
                      user:
                        description: The database username.
                        type: string
                    type: object
                  type: array
                labels:
                  additionalProperties:
                    type: string
                  description: User-defined labels for the alloydb cluster.
                  type: object
                project:
                  description: The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
                  type: string
              type: object
            managementPolicies:
              default:
              - '*'
              description: 'THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
              items:
                description: A ManagementAction represents an action that the Crossplane controllers can take on an external resource.
                enum:
                - Observe
                - Create
                - Update
                - Delete
                - LateInitialize
                - '*'
                type: string
              type: array
            providerConfigRef:
              default:
                name: default
              description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
                policy:
                  description: Policies for referencing.
                  properties:
                    resolution:
                      default: Required
                      description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                      enum:
                      - Required
                      - Optional
                      type: string
                    resolve:
                      description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                      enum:
                      - Always
                      - IfNotPresent
                      type: string
                  type: object
              required:
              - name
              type: object
            publishConnectionDetailsTo:
              description: PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
              properties:
                configRef:
                  default:
                    name: default
                  description: SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                    policy:
                      description: Policies for referencing.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  required:
                  - name
                  type: object
                metadata:
                  description: Metadata is the metadata for connection secret.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
                      type: object
                    type:
                      description: Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
                      type: string
                  type: object
                name:
                  description: Name is the name of the connection secret.
                  type: string
              required:
              - name
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          type: object
      required:
      - spec
      type: object
