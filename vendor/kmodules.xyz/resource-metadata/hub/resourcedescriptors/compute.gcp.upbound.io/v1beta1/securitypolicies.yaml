apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: compute.gcp.upbound.io
    k8s.io/kind: SecurityPolicy
    k8s.io/resource: securitypolicies
    k8s.io/version: v1beta1
  name: compute.gcp.upbound.io-v1beta1-securitypolicies
spec:
  resource:
    group: compute.gcp.upbound.io
    kind: SecurityPolicy
    name: securitypolicies
    scope: Cluster
    version: v1beta1
  validation:
    openAPIV3Schema:
      description: SecurityPolicy is the Schema for the SecurityPolicys API. Creates a Security Policy resource for Google Compute Engine.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: SecurityPolicySpec defines the desired state of SecurityPolicy
          properties:
            deletionPolicy:
              default: Delete
              description: 'DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
              enum:
              - Orphan
              - Delete
              type: string
            forProvider:
              properties:
                adaptiveProtectionConfig:
                  description: Configuration for Google Cloud Armor Adaptive Protection. Structure is documented below.
                  items:
                    properties:
                      layer7DdosDefenseConfig:
                        description: Configuration for Google Cloud Armor Adaptive Protection Layer 7 DDoS Defense. Structure is documented below.
                        items:
                          properties:
                            enable:
                              description: If set to true, enables CAAP for L7 DDoS detection.
                              type: boolean
                            ruleVisibility:
                              description: 'Rule visibility can be one of the following: STANDARD - opaque rules. (default) PREMIUM - transparent rules.'
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
                advancedOptionsConfig:
                  description: Advanced Configuration Options. Structure is documented below.
                  items:
                    properties:
                      jsonCustomConfig:
                        description: Custom configuration to apply the JSON parsing. Only applicable when json_parsing is set to STANDARD. Structure is documented below.
                        items:
                          properties:
                            contentTypes:
                              description: A list of custom Content-Type header values to apply the JSON parsing. The format of the Content-Type header values is defined in RFC 1341. When configuring a custom Content-Type header value, only the type/subtype needs to be specified, and the parameters should be excluded.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      jsonParsing:
                        description: Whether or not to JSON parse the payload body. Defaults to DISABLED.
                        type: string
                      logLevel:
                        description: Log level to use. Defaults to NORMAL.
                        type: string
                    type: object
                  type: array
                description:
                  description: An optional description of this security policy. Max size is 2048.
                  type: string
                project:
                  description: The project in which the resource belongs. If it is not provided, the provider project is used.
                  type: string
                recaptchaOptionsConfig:
                  description: reCAPTCHA Configuration Options. Structure is documented below.
                  items:
                    properties:
                      redirectSiteKey:
                        description: A field to supply a reCAPTCHA site key to be used for all the rules using the redirect action with the type of GOOGLE_RECAPTCHA under the security policy. The specified site key needs to be created from the reCAPTCHA API. The user is responsible for the validity of the specified site key. If not specified, a Google-managed site key is used.
                        type: string
                    type: object
                  type: array
                rule:
                  description: The set of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and match "*"). If no rules are provided when creating a security policy, a default rule with action "allow" will be added. Structure is documented below.
                  items:
                    properties:
                      action:
                        description: 'Action to take when match matches the request. Valid values:'
                        type: string
                      description:
                        description: An optional description of this rule. Max size is 64.
                        type: string
                      headerAction:
                        description: Additional actions that are performed on headers. Structure is documented below.
                        items:
                          properties:
                            requestHeadersToAdds:
                              description: The list of request headers to add or overwrite if they're already present. Structure is documented below.
                              items:
                                properties:
                                  headerName:
                                    description: The name of the header to set.
                                    type: string
                                  headerValue:
                                    description: The value to set the named header to.
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      match:
                        description: A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding action is enforced. Structure is documented below.
                        items:
                          properties:
                            config:
                              description: The configuration options available when specifying versioned_expr. This field must be specified if versioned_expr is specified and cannot be specified if versioned_expr is not specified. Structure is documented below.
                              items:
                                properties:
                                  srcIpRanges:
                                    description: field in config.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              type: array
                            expr:
                              description: User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header. Structure is documented below.
                              items:
                                properties:
                                  expression:
                                    description: Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
                                    type: string
                                type: object
                              type: array
                            versionedExpr:
                              description: 'Predefined rule expression. If this field is specified, config must also be specified. Available options:'
                              type: string
                          type: object
                        type: array
                      preview:
                        description: When set to true, the action specified above is not enforced. Stackdriver logs for requests that trigger a preview action are annotated as such.
                        type: boolean
                      priority:
                        description: An unique positive integer indicating the priority of evaluation for a rule. Rules are evaluated from highest priority (lowest numerically) to lowest priority (highest numerically) in order.
                        type: number
                      rateLimitOptions:
                        description: Must be specified if the action is "rate_based_ban" or "throttle". Cannot be specified for other actions. Structure is documented below.
                        items:
                          properties:
                            banDurationSec:
                              description: Can only be specified if the action for the rule is "rate_based_ban". If specified, determines the time (in seconds) the traffic will continue to be banned by the rate limit after the rate falls below the threshold.
                              type: number
                            banThreshold:
                              description: Can only be specified if the action for the rule is "rate_based_ban". If specified, the key will be banned for the configured 'ban_duration_sec' when the number of requests that exceed the 'rate_limit_threshold' also exceed this 'ban_threshold'. Structure is documented below.
                              items:
                                properties:
                                  count:
                                    description: Number of HTTP(S) requests for calculating the threshold.
                                    type: number
                                  intervalSec:
                                    description: Interval over which the threshold is computed.
                                    type: number
                                type: object
                              type: array
                            conformAction:
                              description: Action to take for requests that are under the configured rate limit threshold. Valid option is "allow" only.
                              type: string
                            enforceOnKey:
                              description: Determines the key to enforce the rate_limit_threshold on. If not specified, defaults to "ALL".
                              type: string
                            enforceOnKeyName:
                              description: 'Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.'
                              type: string
                            exceedAction:
                              description: When a request is denied, returns the HTTP response code specified. Valid options are "deny()" where valid values for status are 403, 404, 429, and 502.
                              type: string
                            exceedRedirectOptions:
                              description: 'block supports:'
                              items:
                                properties:
                                  target:
                                    description: Target for the redirect action. This is required if the type is EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.
                                    type: string
                                  type:
                                    description: Type of the redirect action.
                                    type: string
                                type: object
                              type: array
                            rateLimitThreshold:
                              description: Threshold at which to begin ratelimiting. Structure is documented below.
                              items:
                                properties:
                                  count:
                                    description: Number of HTTP(S) requests for calculating the threshold.
                                    type: number
                                  intervalSec:
                                    description: Interval over which the threshold is computed.
                                    type: number
                                type: object
                              type: array
                          type: object
                        type: array
                      redirectOptions:
                        description: Can be specified if the action is "redirect". Cannot be specified for other actions. Structure is documented below.
                        items:
                          properties:
                            target:
                              description: Target for the redirect action. This is required if the type is EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.
                              type: string
                            type:
                              description: Type of the redirect action.
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
                type:
                  description: The type indicates the intended use of the security policy. This field can be set only at resource creation time.
                  type: string
              type: object
            initProvider:
              description: THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.
              properties:
                adaptiveProtectionConfig:
                  description: Configuration for Google Cloud Armor Adaptive Protection. Structure is documented below.
                  items:
                    properties:
                      layer7DdosDefenseConfig:
                        description: Configuration for Google Cloud Armor Adaptive Protection Layer 7 DDoS Defense. Structure is documented below.
                        items:
                          properties:
                            enable:
                              description: If set to true, enables CAAP for L7 DDoS detection.
                              type: boolean
                            ruleVisibility:
                              description: 'Rule visibility can be one of the following: STANDARD - opaque rules. (default) PREMIUM - transparent rules.'
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
                advancedOptionsConfig:
                  description: Advanced Configuration Options. Structure is documented below.
                  items:
                    properties:
                      jsonCustomConfig:
                        description: Custom configuration to apply the JSON parsing. Only applicable when json_parsing is set to STANDARD. Structure is documented below.
                        items:
                          properties:
                            contentTypes:
                              description: A list of custom Content-Type header values to apply the JSON parsing. The format of the Content-Type header values is defined in RFC 1341. When configuring a custom Content-Type header value, only the type/subtype needs to be specified, and the parameters should be excluded.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      jsonParsing:
                        description: Whether or not to JSON parse the payload body. Defaults to DISABLED.
                        type: string
                      logLevel:
                        description: Log level to use. Defaults to NORMAL.
                        type: string
                    type: object
                  type: array
                description:
                  description: An optional description of this security policy. Max size is 2048.
                  type: string
                project:
                  description: The project in which the resource belongs. If it is not provided, the provider project is used.
                  type: string
                recaptchaOptionsConfig:
                  description: reCAPTCHA Configuration Options. Structure is documented below.
                  items:
                    properties:
                      redirectSiteKey:
                        description: A field to supply a reCAPTCHA site key to be used for all the rules using the redirect action with the type of GOOGLE_RECAPTCHA under the security policy. The specified site key needs to be created from the reCAPTCHA API. The user is responsible for the validity of the specified site key. If not specified, a Google-managed site key is used.
                        type: string
                    type: object
                  type: array
                rule:
                  description: The set of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and match "*"). If no rules are provided when creating a security policy, a default rule with action "allow" will be added. Structure is documented below.
                  items:
                    properties:
                      action:
                        description: 'Action to take when match matches the request. Valid values:'
                        type: string
                      description:
                        description: An optional description of this rule. Max size is 64.
                        type: string
                      headerAction:
                        description: Additional actions that are performed on headers. Structure is documented below.
                        items:
                          properties:
                            requestHeadersToAdds:
                              description: The list of request headers to add or overwrite if they're already present. Structure is documented below.
                              items:
                                properties:
                                  headerName:
                                    description: The name of the header to set.
                                    type: string
                                  headerValue:
                                    description: The value to set the named header to.
                                    type: string
                                type: object
                              type: array
                          type: object
                        type: array
                      match:
                        description: A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding action is enforced. Structure is documented below.
                        items:
                          properties:
                            config:
                              description: The configuration options available when specifying versioned_expr. This field must be specified if versioned_expr is specified and cannot be specified if versioned_expr is not specified. Structure is documented below.
                              items:
                                properties:
                                  srcIpRanges:
                                    description: field in config.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              type: array
                            expr:
                              description: User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header. Structure is documented below.
                              items:
                                properties:
                                  expression:
                                    description: Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
                                    type: string
                                type: object
                              type: array
                            versionedExpr:
                              description: 'Predefined rule expression. If this field is specified, config must also be specified. Available options:'
                              type: string
                          type: object
                        type: array
                      preview:
                        description: When set to true, the action specified above is not enforced. Stackdriver logs for requests that trigger a preview action are annotated as such.
                        type: boolean
                      priority:
                        description: An unique positive integer indicating the priority of evaluation for a rule. Rules are evaluated from highest priority (lowest numerically) to lowest priority (highest numerically) in order.
                        type: number
                      rateLimitOptions:
                        description: Must be specified if the action is "rate_based_ban" or "throttle". Cannot be specified for other actions. Structure is documented below.
                        items:
                          properties:
                            banDurationSec:
                              description: Can only be specified if the action for the rule is "rate_based_ban". If specified, determines the time (in seconds) the traffic will continue to be banned by the rate limit after the rate falls below the threshold.
                              type: number
                            banThreshold:
                              description: Can only be specified if the action for the rule is "rate_based_ban". If specified, the key will be banned for the configured 'ban_duration_sec' when the number of requests that exceed the 'rate_limit_threshold' also exceed this 'ban_threshold'. Structure is documented below.
                              items:
                                properties:
                                  count:
                                    description: Number of HTTP(S) requests for calculating the threshold.
                                    type: number
                                  intervalSec:
                                    description: Interval over which the threshold is computed.
                                    type: number
                                type: object
                              type: array
                            conformAction:
                              description: Action to take for requests that are under the configured rate limit threshold. Valid option is "allow" only.
                              type: string
                            enforceOnKey:
                              description: Determines the key to enforce the rate_limit_threshold on. If not specified, defaults to "ALL".
                              type: string
                            enforceOnKeyName:
                              description: 'Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.'
                              type: string
                            exceedAction:
                              description: When a request is denied, returns the HTTP response code specified. Valid options are "deny()" where valid values for status are 403, 404, 429, and 502.
                              type: string
                            exceedRedirectOptions:
                              description: 'block supports:'
                              items:
                                properties:
                                  target:
                                    description: Target for the redirect action. This is required if the type is EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.
                                    type: string
                                  type:
                                    description: Type of the redirect action.
                                    type: string
                                type: object
                              type: array
                            rateLimitThreshold:
                              description: Threshold at which to begin ratelimiting. Structure is documented below.
                              items:
                                properties:
                                  count:
                                    description: Number of HTTP(S) requests for calculating the threshold.
                                    type: number
                                  intervalSec:
                                    description: Interval over which the threshold is computed.
                                    type: number
                                type: object
                              type: array
                          type: object
                        type: array
                      redirectOptions:
                        description: Can be specified if the action is "redirect". Cannot be specified for other actions. Structure is documented below.
                        items:
                          properties:
                            target:
                              description: Target for the redirect action. This is required if the type is EXTERNAL_302 and cannot be specified for GOOGLE_RECAPTCHA.
                              type: string
                            type:
                              description: Type of the redirect action.
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
                type:
                  description: The type indicates the intended use of the security policy. This field can be set only at resource creation time.
                  type: string
              type: object
            managementPolicies:
              default:
              - '*'
              description: 'THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
              items:
                description: A ManagementAction represents an action that the Crossplane controllers can take on an external resource.
                enum:
                - Observe
                - Create
                - Update
                - Delete
                - LateInitialize
                - '*'
                type: string
              type: array
            providerConfigRef:
              default:
                name: default
              description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
                policy:
                  description: Policies for referencing.
                  properties:
                    resolution:
                      default: Required
                      description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                      enum:
                      - Required
                      - Optional
                      type: string
                    resolve:
                      description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                      enum:
                      - Always
                      - IfNotPresent
                      type: string
                  type: object
              required:
              - name
              type: object
            publishConnectionDetailsTo:
              description: PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
              properties:
                configRef:
                  default:
                    name: default
                  description: SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                    policy:
                      description: Policies for referencing.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  required:
                  - name
                  type: object
                metadata:
                  description: Metadata is the metadata for connection secret.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
                      type: object
                    type:
                      description: Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
                      type: string
                  type: object
                name:
                  description: Name is the name of the connection secret.
                  type: string
              required:
              - name
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          type: object
      required:
      - spec
      type: object
