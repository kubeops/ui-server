apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: compute.gcp.upbound.io
    k8s.io/kind: RegionHealthCheck
    k8s.io/resource: regionhealthchecks
    k8s.io/version: v1beta1
  name: compute.gcp.upbound.io-v1beta1-regionhealthchecks
spec:
  resource:
    group: compute.gcp.upbound.io
    kind: RegionHealthCheck
    name: regionhealthchecks
    scope: Cluster
    version: v1beta1
  validation:
    openAPIV3Schema:
      description: RegionHealthCheck is the Schema for the RegionHealthChecks API. Health Checks determine whether instances are responsive and able to do work.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: RegionHealthCheckSpec defines the desired state of RegionHealthCheck
          properties:
            deletionPolicy:
              default: Delete
              description: 'DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
              enum:
              - Orphan
              - Delete
              type: string
            forProvider:
              properties:
                checkIntervalSec:
                  description: How often (in seconds) to send a health check. The default value is 5 seconds.
                  type: number
                description:
                  description: An optional description of this resource. Provide this property when you create the resource.
                  type: string
                grpcHealthCheck:
                  description: A nested object resource Structure is documented below.
                  items:
                    properties:
                      grpcServiceName:
                        description: 'The gRPC service name for the health check. The value of grpcServiceName has the following meanings by convention:'
                        type: string
                      port:
                        description: The port number for the health check request. Must be specified if portName and portSpecification are not set or if port_specification is USE_FIXED_PORT. Valid values are 1 through 65535.
                        type: number
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: 'Specifies how port is selected for health checking, can be one of the following values:'
                        type: string
                    type: object
                  type: array
                healthyThreshold:
                  description: A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
                  type: number
                http2HealthCheck:
                  description: A nested object resource Structure is documented below.
                  items:
                    properties:
                      host:
                        description: The value of the host header in the HTTP2 health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.
                        type: string
                      port:
                        description: The TCP port number for the HTTP2 health check request. The default value is 443.
                        type: number
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: 'Specifies how port is selected for health checking, can be one of the following values:'
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append before sending data to the backend. Default value is NONE. Possible values are: NONE, PROXY_V1.'
                        type: string
                      requestPath:
                        description: The request path of the HTTP2 health check request. The default value is /.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  type: array
                httpHealthCheck:
                  description: A nested object resource Structure is documented below.
                  items:
                    properties:
                      host:
                        description: The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.
                        type: string
                      port:
                        description: The TCP port number for the HTTP health check request. The default value is 80.
                        type: number
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: 'Specifies how port is selected for health checking, can be one of the following values:'
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append before sending data to the backend. Default value is NONE. Possible values are: NONE, PROXY_V1.'
                        type: string
                      requestPath:
                        description: The request path of the HTTP health check request. The default value is /.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  type: array
                httpsHealthCheck:
                  description: A nested object resource Structure is documented below.
                  items:
                    properties:
                      host:
                        description: The value of the host header in the HTTPS health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.
                        type: string
                      port:
                        description: The TCP port number for the HTTPS health check request. The default value is 443.
                        type: number
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: 'Specifies how port is selected for health checking, can be one of the following values:'
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append before sending data to the backend. Default value is NONE. Possible values are: NONE, PROXY_V1.'
                        type: string
                      requestPath:
                        description: The request path of the HTTPS health check request. The default value is /.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  type: array
                logConfig:
                  description: Configure logging on this health check. Structure is documented below.
                  items:
                    properties:
                      enable:
                        description: Indicates whether or not to export logs. This is false by default, which means no health check logging will be done.
                        type: boolean
                    type: object
                  type: array
                project:
                  description: The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
                  type: string
                region:
                  description: The Region in which the created health check should reside. If it is not provided, the provider region is used.
                  type: string
                sslHealthCheck:
                  description: A nested object resource Structure is documented below.
                  items:
                    properties:
                      port:
                        description: The TCP port number for the SSL health check request. The default value is 443.
                        type: number
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: 'Specifies how port is selected for health checking, can be one of the following values:'
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append before sending data to the backend. Default value is NONE. Possible values are: NONE, PROXY_V1.'
                        type: string
                      request:
                        description: The application data to send once the SSL connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  type: array
                tcpHealthCheck:
                  description: A nested object resource Structure is documented below.
                  items:
                    properties:
                      port:
                        description: The TCP port number for the TCP health check request. The default value is 80.
                        type: number
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: 'Specifies how port is selected for health checking, can be one of the following values:'
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append before sending data to the backend. Default value is NONE. Possible values are: NONE, PROXY_V1.'
                        type: string
                      request:
                        description: The application data to send once the TCP connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  type: array
                timeoutSec:
                  description: How long (in seconds) to wait before claiming failure. The default value is 5 seconds.  It is invalid for timeoutSec to have greater value than checkIntervalSec.
                  type: number
                unhealthyThreshold:
                  description: A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
                  type: number
              required:
              - region
              type: object
            initProvider:
              description: THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.
              properties:
                checkIntervalSec:
                  description: How often (in seconds) to send a health check. The default value is 5 seconds.
                  type: number
                description:
                  description: An optional description of this resource. Provide this property when you create the resource.
                  type: string
                grpcHealthCheck:
                  description: A nested object resource Structure is documented below.
                  items:
                    properties:
                      grpcServiceName:
                        description: 'The gRPC service name for the health check. The value of grpcServiceName has the following meanings by convention:'
                        type: string
                      port:
                        description: The port number for the health check request. Must be specified if portName and portSpecification are not set or if port_specification is USE_FIXED_PORT. Valid values are 1 through 65535.
                        type: number
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: 'Specifies how port is selected for health checking, can be one of the following values:'
                        type: string
                    type: object
                  type: array
                healthyThreshold:
                  description: A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
                  type: number
                http2HealthCheck:
                  description: A nested object resource Structure is documented below.
                  items:
                    properties:
                      host:
                        description: The value of the host header in the HTTP2 health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.
                        type: string
                      port:
                        description: The TCP port number for the HTTP2 health check request. The default value is 443.
                        type: number
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: 'Specifies how port is selected for health checking, can be one of the following values:'
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append before sending data to the backend. Default value is NONE. Possible values are: NONE, PROXY_V1.'
                        type: string
                      requestPath:
                        description: The request path of the HTTP2 health check request. The default value is /.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  type: array
                httpHealthCheck:
                  description: A nested object resource Structure is documented below.
                  items:
                    properties:
                      host:
                        description: The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.
                        type: string
                      port:
                        description: The TCP port number for the HTTP health check request. The default value is 80.
                        type: number
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: 'Specifies how port is selected for health checking, can be one of the following values:'
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append before sending data to the backend. Default value is NONE. Possible values are: NONE, PROXY_V1.'
                        type: string
                      requestPath:
                        description: The request path of the HTTP health check request. The default value is /.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  type: array
                httpsHealthCheck:
                  description: A nested object resource Structure is documented below.
                  items:
                    properties:
                      host:
                        description: The value of the host header in the HTTPS health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.
                        type: string
                      port:
                        description: The TCP port number for the HTTPS health check request. The default value is 443.
                        type: number
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: 'Specifies how port is selected for health checking, can be one of the following values:'
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append before sending data to the backend. Default value is NONE. Possible values are: NONE, PROXY_V1.'
                        type: string
                      requestPath:
                        description: The request path of the HTTPS health check request. The default value is /.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  type: array
                logConfig:
                  description: Configure logging on this health check. Structure is documented below.
                  items:
                    properties:
                      enable:
                        description: Indicates whether or not to export logs. This is false by default, which means no health check logging will be done.
                        type: boolean
                    type: object
                  type: array
                project:
                  description: The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
                  type: string
                sslHealthCheck:
                  description: A nested object resource Structure is documented below.
                  items:
                    properties:
                      port:
                        description: The TCP port number for the SSL health check request. The default value is 443.
                        type: number
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: 'Specifies how port is selected for health checking, can be one of the following values:'
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append before sending data to the backend. Default value is NONE. Possible values are: NONE, PROXY_V1.'
                        type: string
                      request:
                        description: The application data to send once the SSL connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  type: array
                tcpHealthCheck:
                  description: A nested object resource Structure is documented below.
                  items:
                    properties:
                      port:
                        description: The TCP port number for the TCP health check request. The default value is 80.
                        type: number
                      portName:
                        description: Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
                        type: string
                      portSpecification:
                        description: 'Specifies how port is selected for health checking, can be one of the following values:'
                        type: string
                      proxyHeader:
                        description: 'Specifies the type of proxy header to append before sending data to the backend. Default value is NONE. Possible values are: NONE, PROXY_V1.'
                        type: string
                      request:
                        description: The application data to send once the TCP connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII.
                        type: string
                      response:
                        description: The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.
                        type: string
                    type: object
                  type: array
                timeoutSec:
                  description: How long (in seconds) to wait before claiming failure. The default value is 5 seconds.  It is invalid for timeoutSec to have greater value than checkIntervalSec.
                  type: number
                unhealthyThreshold:
                  description: A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
                  type: number
              type: object
            managementPolicies:
              default:
              - '*'
              description: 'THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
              items:
                description: A ManagementAction represents an action that the Crossplane controllers can take on an external resource.
                enum:
                - Observe
                - Create
                - Update
                - Delete
                - LateInitialize
                - '*'
                type: string
              type: array
            providerConfigRef:
              default:
                name: default
              description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
                policy:
                  description: Policies for referencing.
                  properties:
                    resolution:
                      default: Required
                      description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                      enum:
                      - Required
                      - Optional
                      type: string
                    resolve:
                      description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                      enum:
                      - Always
                      - IfNotPresent
                      type: string
                  type: object
              required:
              - name
              type: object
            publishConnectionDetailsTo:
              description: PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
              properties:
                configRef:
                  default:
                    name: default
                  description: SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                    policy:
                      description: Policies for referencing.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  required:
                  - name
                  type: object
                metadata:
                  description: Metadata is the metadata for connection secret.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
                      type: object
                    type:
                      description: Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
                      type: string
                  type: object
                name:
                  description: Name is the name of the connection secret.
                  type: string
              required:
              - name
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          type: object
      required:
      - spec
      type: object
