apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: ui.k8s.appscode.com
    k8s.io/kind: Feature
    k8s.io/resource: features
    k8s.io/version: v1alpha1
  name: ui.k8s.appscode.com-v1alpha1-features
spec:
  resource:
    group: ui.k8s.appscode.com
    kind: Feature
    name: features
    scope: Cluster
    version: v1alpha1
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          properties:
            description:
              description: Description specifies a short description of the service this feature provides.
              type: string
            featureSet:
              description: FeatureSet specifies the name of the FeatureSet where this feature belong to.
              type: string
            icons:
              description: Icons is an optional list of icons for an application. Icon information includes the source, size, and mime type. These icons will be used in UI.
              items:
                description: ImageSpec contains information about an image used as an icon.
                properties:
                  size:
                    description: (optional) The size of the image in pixels (e.g., 25x25).
                    type: string
                  src:
                    description: The source for image represented as either an absolute URL to the image or a Data URL containing the image. Data URLs are defined in RFC 2397.
                    type: string
                  type:
                    description: (optional) The mine type of the image (e.g., "image/png").
                    type: string
                required:
                - src
                type: object
              type: array
            required:
              description: Required specify whether this feature is mandatory or not for enabling the respecting FeatureSet.
              type: boolean
            requirements:
              description: Requirements specifies the requirements for this feature to consider enabled.
              properties:
                features:
                  description: Features specifies a list of Feature names that must be enabled for using this feature.
                  items:
                    type: string
                  type: array
                resources:
                  description: Resources specifies the resources that should be registered to consider this feature as enabled.
                  items:
                    description: GroupVersionKind unambiguously identifies a kind.  It doesn't anonymously include GroupVersion to avoid automatic coercion.  It doesn't use a GroupVersion to avoid custom marshalling
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                      version:
                        type: string
                    required:
                    - group
                    - kind
                    - version
                    type: object
                  type: array
              type: object
            title:
              description: Title specify the title of this feature.
              type: string
          required:
          - description
          - featureSet
          - title
          type: object
      type: object
