apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: devices.azure.upbound.io
    k8s.io/kind: IOTHub
    k8s.io/resource: iothubs
    k8s.io/version: v1beta1
  name: devices.azure.upbound.io-v1beta1-iothubs
spec:
  resource:
    group: devices.azure.upbound.io
    kind: IOTHub
    name: iothubs
    scope: Cluster
    version: v1beta1
  validation:
    openAPIV3Schema:
      description: IOTHub is the Schema for the IOTHubs API. Manages an IotHub
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: IOTHubSpec defines the desired state of IOTHub
          properties:
            deletionPolicy:
              default: Delete
              description: 'DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
              enum:
              - Orphan
              - Delete
              type: string
            forProvider:
              properties:
                cloudToDevice:
                  description: A cloud_to_device block as defined below.
                  items:
                    properties:
                      defaultTtl:
                        description: The default time to live for cloud-to-device messages, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 48 hours. Defaults to PT1H.
                        type: string
                      feedback:
                        description: A feedback block as defined below.
                        items:
                          properties:
                            lockDuration:
                              description: The lock duration for the file upload notifications queue, specified as an ISO 8601 timespan duration. This value must be between 5 and 300 seconds. Defaults to PT1M.
                              type: string
                            maxDeliveryCount:
                              description: The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to 10.
                              type: number
                            timeToLive:
                              description: The retention time for service-bound feedback messages, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 48 hours. Defaults to PT1H.
                              type: string
                          type: object
                        type: array
                      maxDeliveryCount:
                        description: The maximum delivery count for cloud-to-device per-device queues. This value must be between 1 and 100. Defaults to 10.
                        type: number
                    type: object
                  type: array
                eventHubPartitionCount:
                  description: The number of device-to-cloud partitions used by backing event hubs. Must be between 2 and 128.
                  type: number
                eventHubRetentionInDays:
                  description: The event hub retention to use in days. Must be between 1 and 7.
                  type: number
                fileUpload:
                  description: A file_upload block as defined below.
                  items:
                    properties:
                      authenticationType:
                        description: The type used to authenticate against the storage account. Possible values are keyBased and identityBased. Defaults to keyBased.
                        type: string
                      connectionStringSecretRef:
                        description: The connection string for the Azure Storage account to which files are uploaded.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      containerName:
                        description: The name of the root container where the files should be uploaded to. The container need not exist but should be creatable using the connection_string specified.
                        type: string
                      defaultTtl:
                        description: The period of time for which a file upload notification message is available to consume before it expires, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 48 hours. Defaults to PT1H.
                        type: string
                      identityId:
                        description: The ID of the User Managed Identity used to authenticate against the storage account.
                        type: string
                      lockDuration:
                        description: The lock duration for the file upload notifications queue, specified as an ISO 8601 timespan duration. This value must be between 5 and 300 seconds. Defaults to PT1M.
                        type: string
                      maxDeliveryCount:
                        description: The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to 10.
                        type: number
                      notifications:
                        description: Used to specify whether file notifications are sent to IoT Hub on upload. Defaults to false.
                        type: boolean
                      sasTtl:
                        description: The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 24 hours. Defaults to PT1H.
                        type: string
                    required:
                    - connectionStringSecretRef
                    type: object
                  type: array
                identity:
                  description: An identity block as defined below.
                  items:
                    properties:
                      identityIds:
                        description: Specifies a list of User Assigned Managed Identity IDs to be assigned to this IoT Hub.
                        items:
                          type: string
                        type: array
                      type:
                        description: Specifies the type of Managed Service Identity that should be configured on this IoT Hub. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
                        type: string
                    type: object
                  type: array
                location:
                  description: Specifies the supported Azure location where the resource has to be created. Changing this forces a new resource to be created.
                  type: string
                minTlsVersion:
                  description: Specifies the minimum TLS version to support for this hub. The only valid value is 1.2. Changing this forces a new resource to be created.
                  type: string
                networkRuleSet:
                  description: A network_rule_set block as defined below.
                  items:
                    properties:
                      applyToBuiltinEventhubEndpoint:
                        description: Determines if Network Rule Set is also applied to the BuiltIn EventHub EndPoint of the IotHub. Defaults to false.
                        type: boolean
                      defaultAction:
                        description: Default Action for Network Rule Set. Possible values are Deny, Allow. Defaults to Deny.
                        type: string
                      ipRule:
                        description: One or more ip_rule blocks as defined below.
                        items:
                          properties:
                            action:
                              description: The desired action for requests captured by this rule. Possible values are Allow. Defaults to Allow.
                              type: string
                            ipMask:
                              description: The IP address range in CIDR notation for the IP rule.
                              type: string
                            name:
                              description: The name of the sku. Possible values are B1, B2, B3, F1, S1, S2, and S3.
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
                publicNetworkAccessEnabled:
                  description: Is the IotHub resource accessible from a public network?
                  type: boolean
                resourceGroupName:
                  description: The name of the resource group under which the IotHub resource has to be created. Changing this forces a new resource to be created.
                  type: string
                resourceGroupNameRef:
                  description: Reference to a ResourceGroup in azure to populate resourceGroupName.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                    policy:
                      description: Policies for referencing.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  required:
                  - name
                  type: object
                resourceGroupNameSelector:
                  description: Selector for a ResourceGroup in azure to populate resourceGroupName.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels is selected.
                      type: object
                    policy:
                      description: Policies for selection.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  type: object
                sku:
                  description: A sku block as defined below.
                  items:
                    properties:
                      capacity:
                        description: The number of provisioned IoT Hub units.
                        type: number
                      name:
                        description: The name of the sku. Possible values are B1, B2, B3, F1, S1, S2, and S3.
                        type: string
                    type: object
                  type: array
                tags:
                  additionalProperties:
                    type: string
                  description: A mapping of tags to assign to the resource.
                  type: object
              type: object
            initProvider:
              description: THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.
              properties:
                cloudToDevice:
                  description: A cloud_to_device block as defined below.
                  items:
                    properties:
                      defaultTtl:
                        description: The default time to live for cloud-to-device messages, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 48 hours. Defaults to PT1H.
                        type: string
                      feedback:
                        description: A feedback block as defined below.
                        items:
                          properties:
                            lockDuration:
                              description: The lock duration for the file upload notifications queue, specified as an ISO 8601 timespan duration. This value must be between 5 and 300 seconds. Defaults to PT1M.
                              type: string
                            maxDeliveryCount:
                              description: The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to 10.
                              type: number
                            timeToLive:
                              description: The retention time for service-bound feedback messages, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 48 hours. Defaults to PT1H.
                              type: string
                          type: object
                        type: array
                      maxDeliveryCount:
                        description: The maximum delivery count for cloud-to-device per-device queues. This value must be between 1 and 100. Defaults to 10.
                        type: number
                    type: object
                  type: array
                eventHubPartitionCount:
                  description: The number of device-to-cloud partitions used by backing event hubs. Must be between 2 and 128.
                  type: number
                eventHubRetentionInDays:
                  description: The event hub retention to use in days. Must be between 1 and 7.
                  type: number
                fileUpload:
                  description: A file_upload block as defined below.
                  items:
                    properties:
                      authenticationType:
                        description: The type used to authenticate against the storage account. Possible values are keyBased and identityBased. Defaults to keyBased.
                        type: string
                      containerName:
                        description: The name of the root container where the files should be uploaded to. The container need not exist but should be creatable using the connection_string specified.
                        type: string
                      defaultTtl:
                        description: The period of time for which a file upload notification message is available to consume before it expires, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 48 hours. Defaults to PT1H.
                        type: string
                      identityId:
                        description: The ID of the User Managed Identity used to authenticate against the storage account.
                        type: string
                      lockDuration:
                        description: The lock duration for the file upload notifications queue, specified as an ISO 8601 timespan duration. This value must be between 5 and 300 seconds. Defaults to PT1M.
                        type: string
                      maxDeliveryCount:
                        description: The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to 10.
                        type: number
                      notifications:
                        description: Used to specify whether file notifications are sent to IoT Hub on upload. Defaults to false.
                        type: boolean
                      sasTtl:
                        description: The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 24 hours. Defaults to PT1H.
                        type: string
                    type: object
                  type: array
                identity:
                  description: An identity block as defined below.
                  items:
                    properties:
                      identityIds:
                        description: Specifies a list of User Assigned Managed Identity IDs to be assigned to this IoT Hub.
                        items:
                          type: string
                        type: array
                      type:
                        description: Specifies the type of Managed Service Identity that should be configured on this IoT Hub. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
                        type: string
                    type: object
                  type: array
                location:
                  description: Specifies the supported Azure location where the resource has to be created. Changing this forces a new resource to be created.
                  type: string
                minTlsVersion:
                  description: Specifies the minimum TLS version to support for this hub. The only valid value is 1.2. Changing this forces a new resource to be created.
                  type: string
                networkRuleSet:
                  description: A network_rule_set block as defined below.
                  items:
                    properties:
                      applyToBuiltinEventhubEndpoint:
                        description: Determines if Network Rule Set is also applied to the BuiltIn EventHub EndPoint of the IotHub. Defaults to false.
                        type: boolean
                      defaultAction:
                        description: Default Action for Network Rule Set. Possible values are Deny, Allow. Defaults to Deny.
                        type: string
                      ipRule:
                        description: One or more ip_rule blocks as defined below.
                        items:
                          properties:
                            action:
                              description: The desired action for requests captured by this rule. Possible values are Allow. Defaults to Allow.
                              type: string
                            ipMask:
                              description: The IP address range in CIDR notation for the IP rule.
                              type: string
                            name:
                              description: The name of the sku. Possible values are B1, B2, B3, F1, S1, S2, and S3.
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
                publicNetworkAccessEnabled:
                  description: Is the IotHub resource accessible from a public network?
                  type: boolean
                sku:
                  description: A sku block as defined below.
                  items:
                    properties:
                      capacity:
                        description: The number of provisioned IoT Hub units.
                        type: number
                      name:
                        description: The name of the sku. Possible values are B1, B2, B3, F1, S1, S2, and S3.
                        type: string
                    type: object
                  type: array
                tags:
                  additionalProperties:
                    type: string
                  description: A mapping of tags to assign to the resource.
                  type: object
              type: object
            managementPolicies:
              default:
              - '*'
              description: 'THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
              items:
                description: A ManagementAction represents an action that the Crossplane controllers can take on an external resource.
                enum:
                - Observe
                - Create
                - Update
                - Delete
                - LateInitialize
                - '*'
                type: string
              type: array
            providerConfigRef:
              default:
                name: default
              description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
                policy:
                  description: Policies for referencing.
                  properties:
                    resolution:
                      default: Required
                      description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                      enum:
                      - Required
                      - Optional
                      type: string
                    resolve:
                      description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                      enum:
                      - Always
                      - IfNotPresent
                      type: string
                  type: object
              required:
              - name
              type: object
            publishConnectionDetailsTo:
              description: PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
              properties:
                configRef:
                  default:
                    name: default
                  description: SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                    policy:
                      description: Policies for referencing.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  required:
                  - name
                  type: object
                metadata:
                  description: Metadata is the metadata for connection secret.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
                      type: object
                    type:
                      description: Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
                      type: string
                  type: object
                name:
                  description: Name is the name of the connection secret.
                  type: string
              required:
              - name
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          type: object
          x-kubernetes-validations:
          - message: spec.forProvider.location is a required parameter
            rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies || ''Update'' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))'
          - message: spec.forProvider.sku is a required parameter
            rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies || ''Update'' in self.managementPolicies) || has(self.forProvider.sku) || (has(self.initProvider) && has(self.initProvider.sku))'
      required:
      - spec
      type: object
