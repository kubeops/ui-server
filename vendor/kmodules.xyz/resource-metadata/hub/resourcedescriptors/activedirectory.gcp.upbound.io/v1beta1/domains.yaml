apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: activedirectory.gcp.upbound.io
    k8s.io/kind: Domain
    k8s.io/resource: domains
    k8s.io/version: v1beta1
  name: activedirectory.gcp.upbound.io-v1beta1-domains
spec:
  resource:
    group: activedirectory.gcp.upbound.io
    kind: Domain
    name: domains
    scope: Cluster
    version: v1beta1
  validation:
    openAPIV3Schema:
      description: Domain is the Schema for the Domains API. Creates a Microsoft AD domain
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: DomainSpec defines the desired state of Domain
          properties:
            deletionPolicy:
              default: Delete
              description: 'DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
              enum:
              - Orphan
              - Delete
              type: string
            forProvider:
              properties:
                admin:
                  description: The name of delegated administrator account used to perform Active Directory operations. If not specified, setupadmin will be used.
                  type: string
                authorizedNetworks:
                  description: The full names of the Google Compute Engine networks the domain instance is connected to. The domain is only available on networks listed in authorizedNetworks. If CIDR subnets overlap between networks, domain creation will fail.
                  items:
                    type: string
                  type: array
                domainName:
                  description: The fully qualified domain name. e.g. mydomain.myorganization.com, with the restrictions, https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains.
                  type: string
                labels:
                  additionalProperties:
                    type: string
                  description: Resource labels that can contain user-provided metadata
                  type: object
                locations:
                  description: Locations where domain needs to be provisioned. [regions][compute/docs/regions-zones/] e.g. us-west1 or us-east4 Service supports up to 4 locations at once. Each location will use a /26 block.
                  items:
                    type: string
                  type: array
                project:
                  description: The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
                  type: string
                reservedIpRange:
                  description: The CIDR range of internal addresses that are reserved for this domain. Reserved networks must be /24 or larger. Ranges must be unique and non-overlapping with existing subnets in authorizedNetworks
                  type: string
              type: object
            initProvider:
              description: THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.
              properties:
                admin:
                  description: The name of delegated administrator account used to perform Active Directory operations. If not specified, setupadmin will be used.
                  type: string
                authorizedNetworks:
                  description: The full names of the Google Compute Engine networks the domain instance is connected to. The domain is only available on networks listed in authorizedNetworks. If CIDR subnets overlap between networks, domain creation will fail.
                  items:
                    type: string
                  type: array
                domainName:
                  description: The fully qualified domain name. e.g. mydomain.myorganization.com, with the restrictions, https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains.
                  type: string
                labels:
                  additionalProperties:
                    type: string
                  description: Resource labels that can contain user-provided metadata
                  type: object
                locations:
                  description: Locations where domain needs to be provisioned. [regions][compute/docs/regions-zones/] e.g. us-west1 or us-east4 Service supports up to 4 locations at once. Each location will use a /26 block.
                  items:
                    type: string
                  type: array
                project:
                  description: The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
                  type: string
                reservedIpRange:
                  description: The CIDR range of internal addresses that are reserved for this domain. Reserved networks must be /24 or larger. Ranges must be unique and non-overlapping with existing subnets in authorizedNetworks
                  type: string
              type: object
            managementPolicies:
              default:
              - '*'
              description: 'THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
              items:
                description: A ManagementAction represents an action that the Crossplane controllers can take on an external resource.
                enum:
                - Observe
                - Create
                - Update
                - Delete
                - LateInitialize
                - '*'
                type: string
              type: array
            providerConfigRef:
              default:
                name: default
              description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
                policy:
                  description: Policies for referencing.
                  properties:
                    resolution:
                      default: Required
                      description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                      enum:
                      - Required
                      - Optional
                      type: string
                    resolve:
                      description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                      enum:
                      - Always
                      - IfNotPresent
                      type: string
                  type: object
              required:
              - name
              type: object
            publishConnectionDetailsTo:
              description: PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
              properties:
                configRef:
                  default:
                    name: default
                  description: SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                    policy:
                      description: Policies for referencing.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  required:
                  - name
                  type: object
                metadata:
                  description: Metadata is the metadata for connection secret.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
                      type: object
                    type:
                      description: Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
                      type: string
                  type: object
                name:
                  description: Name is the name of the connection secret.
                  type: string
              required:
              - name
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          type: object
          x-kubernetes-validations:
          - message: spec.forProvider.domainName is a required parameter
            rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies || ''Update'' in self.managementPolicies) || has(self.forProvider.domainName) || (has(self.initProvider) && has(self.initProvider.domainName))'
          - message: spec.forProvider.locations is a required parameter
            rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies || ''Update'' in self.managementPolicies) || has(self.forProvider.locations) || (has(self.initProvider) && has(self.initProvider.locations))'
          - message: spec.forProvider.reservedIpRange is a required parameter
            rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies || ''Update'' in self.managementPolicies) || has(self.forProvider.reservedIpRange) || (has(self.initProvider) && has(self.initProvider.reservedIpRange))'
      required:
      - spec
      type: object
